<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>布隆过滤器原理</title>
      <link href="/2020/07/22/bloom-filter/"/>
      <url>/2020/07/22/bloom-filter/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>在项目中使用过布隆过滤，非常强大，效率出奇的高，而且不怎么占用内存。在此记录下布隆过滤器原理。</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote><p>Bloom Filter是1970年由Bloom提出的。它实际上是一个很长的二进制向量和一系列随机映射函数（Hash函数）。布隆过滤器可以用于检索一个元素是否在一个集合中。它的优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。Bloom Filter广泛的应用于各种需要查询的场合中，如Orocle的数据库，Google的BitTable也用了此技术。<br>摘自<a href="http://www.sigma.me/2011/09/13/hash-and-bloom-filter.html" target="_blank" rel="noopener">http://www.sigma.me/2011/09/13/hash-and-bloom-filter.html</a></p></blockquote><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><img src="bloom1.png" alt="原理"></p><p>看着上面的图，按流程描述下原理。</p><ol><li>准备一个足够大的bit array表；</li><li>将待处理数据List中的数据分别经过多个hash算法计算出hash值，并求余；</li><li>将求余的多个值映射到bit array表，在多个余值的位上，由0置1。</li></ol><p>如果计算出的多个位上已经是1，则数据已存在，过滤掉，如果有一个或多个是0，则是新数据，保存bit位。</p><p><strong>误报的情况</strong>: 当不同的数据计算出的bit位与后计算出来的bit位重合，会出现误报。</p><p><img src="bloom2.png" alt="误报"></p><p><strong>降低误报的方法</strong>:</p><ul><li>将bit array的size设置的够大</li><li>使用更多的hash算法，但使用太多的hash算法也会降低效率，也可使用单个hash算法，通过按规则修改数据，得出不同的值来实现也可。</li></ul><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>效率高</li><li>不存在漏报</li><li>空间占用低</li><li>安全</li></ul><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul><li>删除困难</li><li>一定的识别率</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>利用java aop实现异常触发器</title>
      <link href="/2020/07/21/java-aop-exception-trigger/"/>
      <url>/2020/07/21/java-aop-exception-trigger/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>上线一些小的项目，项目出现异常，一般不能实时反馈，如何才能在出现异常时实时捕获反馈呢？</p><a id="more"></a><h2 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Target</span>(&#123; ElementType.METHOD, ElementType.TYPE&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ExceptionListener &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionNoticeAop</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterThrowing</span>(value = <span class="string">"@within(listener)"</span>, throwing = <span class="string">"e"</span>,argNames = <span class="string">"listener,e"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">exceptionNotice</span><span class="params">(JoinPoint joinPoint ,ExceptionListener listener, RuntimeException e)</span></span>&#123;</span><br><span class="line">        handleException(e, joinPoint.getSignature().getName(), joinPoint.getArgs());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterThrowing</span>(value = <span class="string">"@annotation(listener)"</span>, throwing = <span class="string">"e"</span> ,argNames = <span class="string">"listener,e"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionNoticeWithMethon</span><span class="params">(JoinPoint joinPoint ,ExceptionListener listener, RuntimeException e)</span></span>&#123;</span><br><span class="line">        handleException(e, joinPoint.getSignature().getName(), joinPoint.getArgs());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleException</span><span class="params">(RuntimeException exception, String methodName, Object[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"出现异常方法："</span> + methodName);</span><br><span class="line">        System.out.printf(<span class="string">"出现异常参数："</span> + String.join(<span class="string">","</span>, Arrays.stream(args).map(x -&gt; x.toString()).toArray(String[]::<span class="keyword">new</span>)));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//通知代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@ExceptionListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootDemoHelloworldApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(SpringBootDemoHelloworldApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hello，World</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> who 参数，非必须</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Hello, $&#123;who&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(@RequestParam(required = <span class="keyword">false</span>, name = <span class="string">"who"</span>)</span> String who) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> StrUtil.format(<span class="string">"Hello, &#123;&#125;!"</span>, division(<span class="number">10</span>,<span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 除法，引起异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">division</span><span class="params">(<span class="keyword">int</span> i ,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> String.valueOf(i/j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="通知方法"><a href="#通知方法" class="headerlink" title="通知方法"></a>通知方法</h2><p>通知的方法有很多，可以通过邮件，钉钉机器人等方法，实现实时的通知。</p><h2 id="相关项目"><a href="#相关项目" class="headerlink" title="相关项目"></a>相关项目</h2><p><a href="https://gitee.com/ITEater/prometheus-spring-boot-starter" target="_blank" rel="noopener">prometheus-spring-boot-starter</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux pam在OMV中的应用</title>
      <link href="/2020/07/21/linux-pam-to-openmediavault/"/>
      <url>/2020/07/21/linux-pam-to-openmediavault/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>折腾过几次openmediavault，发现它使用的用户管理有点奇怪，用户信息没使用关系型数据库存储。so，就去钻研了下，它是如何实现的。</p><a id="more"></a><h2 id="探案过程"><a href="#探案过程" class="headerlink" title="探案过程"></a>探案过程</h2><p>查找login的过程有点费工夫，主要对php不太熟悉，走了点弯路。</p><p>大致的定位过程：</p><ol><li>查找login方法</li><li>查找authUser方法</li><li>查找authenticate方法，authenticate代码如下</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Authenticate user via PAM. Account expiration and access hours are</span></span><br><span class="line"><span class="comment"> * checked, too. Note, the calling process must have the privilege to</span></span><br><span class="line"><span class="comment"> * read the user shadow file.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> password The password.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> TRUE if the authentication was successful, otherwise FALSE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">authenticate</span><span class="params">($password)</span> </span>&#123;</span><br><span class="line"><span class="comment">// Use the PAM module to authenticate the user if possible,</span></span><br><span class="line"><span class="comment">// otherwise use a fallback.</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">TRUE</span> === extension_loaded(<span class="string">"pam"</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> pam_auth(<span class="keyword">$this</span>-&gt;getName(), $password);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Use the following python code to authenticate the user</span></span><br><span class="line"><span class="comment">// via PAM. We need to go this way because there is no PAM</span></span><br><span class="line"><span class="comment">// plugin available for PHP7.</span></span><br><span class="line"><span class="comment">// The code requires the python3-pampy Debian package.</span></span><br><span class="line">$cmd = <span class="keyword">new</span> \OMV\System\Process(<span class="string">"python3"</span>, sprintf(<span class="string">"&lt;&lt;END\n"</span>.</span><br><span class="line">  <span class="string">"import pam\n"</span>.</span><br><span class="line">  <span class="string">"import sys\n"</span>.</span><br><span class="line">  <span class="string">"pam = pam.pam()\n"</span>.</span><br><span class="line">  <span class="string">"pam.authenticate(%s, %s, 'openmediavault')\n"</span>.</span><br><span class="line">  <span class="string">"sys.exit(pam.code)\n"</span>.</span><br><span class="line">  <span class="string">"END"</span>, escapeshellarg(<span class="keyword">$this</span>-&gt;getName()),</span><br><span class="line">  escapeshellarg($password)));</span><br><span class="line">$cmd-&gt;setQuiet(<span class="keyword">TRUE</span>);</span><br><span class="line">$cmd-&gt;execute($output, $exitStatus);</span><br><span class="line"><span class="keyword">return</span> (<span class="number">0</span> == $exitStatus);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注释已经非常详细，默认使用php自带的pam_auth模块，如果模块加载失败，使用python的pam模块。</p><p>如果大家有兴趣去瞧瞧，定位到登录验证最简单的方式是在源码中全局搜索<code>pam-auth</code></p><h2 id="Linux-PAM"><a href="#Linux-PAM" class="headerlink" title="Linux PAM"></a>Linux PAM</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Linux PAM(Pluggable Authentication Modules) 是一个系统级用户认证框架。按照我的理解就是将用户认证独立开来，让系统或者其他应用程序可以自定义使用。这也是为什么openmediavault能够使用它的原因。</p><h3 id="应用层面"><a href="#应用层面" class="headerlink" title="应用层面"></a>应用层面</h3><p>PAM模块API非常简洁，对开发人员十分友好。我们可以通过<code>python-pam</code>提供的相关api查看下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">class pam(builtins.object)</span><br><span class="line"> |  Methods defined here:</span><br><span class="line"> |</span><br><span class="line"> |  __init__(self)</span><br><span class="line"> |      Initialize self.  See help(type(self)) for accurate signature.</span><br><span class="line"> |</span><br><span class="line"> |  authenticate(self, username, password, service&#x3D;&#39;login&#39;, encoding&#x3D;&#39;utf-8&#39;, resetcreds&#x3D;True)</span><br><span class="line"> |      username and password authentication for the given service.</span><br><span class="line"> |</span><br><span class="line"> |         Returns True for success, or False for failure.</span><br><span class="line"> |</span><br><span class="line"> |         self.code (integer) and self.reason (string) are always stored and may</span><br><span class="line"> |         be referenced for the reason why authentication failed. 0&#x2F;&#39;Success&#39; will</span><br><span class="line"> |         be stored for success.</span><br><span class="line"> |</span><br><span class="line"> |         Python3 expects bytes() for ctypes inputs.  This function will make</span><br><span class="line"> |         necessary conversions using the supplied encoding.</span><br><span class="line"> |</span><br><span class="line"> |      Inputs:</span><br><span class="line"> |        username: username to authenticate</span><br><span class="line"> |        password: password in plain text</span><br><span class="line"> |        service:  PAM service to authenticate against, defaults to &#39;login&#39;</span><br><span class="line"> |</span><br><span class="line"> |      Returns:</span><br><span class="line"> |        success:  True</span><br><span class="line"> |        failure:  False</span><br><span class="line"> |</span><br><span class="line"> |  ----------------------------------------------------------------------</span><br><span class="line"> |  Data descriptors defined here:</span><br><span class="line"> |</span><br><span class="line"> |  __dict__</span><br><span class="line"> |      dictionary for instance variables (if defined)</span><br><span class="line"> |</span><br><span class="line"> |  __weakref__</span><br><span class="line"> |      list of weak references to the object (if defined)</span><br><span class="line"> |</span><br><span class="line"> |  ----------------------------------------------------------------------</span><br><span class="line"> |  Data and other attributes defined here:</span><br><span class="line"> |</span><br><span class="line"> |  code &#x3D; 0</span><br><span class="line"> |</span><br><span class="line"> |  reason &#x3D; None</span><br></pre></td></tr></table></figure><p>主要就是调用authenticate进行验证，成功返回True。</p><h3 id="系统层面"><a href="#系统层面" class="headerlink" title="系统层面"></a>系统层面</h3><p>系统层面，我主要看下它的配置方式。对于openmediavault可以在PAM配置文件夹<code>/etc/pam.d/</code>中查看到如下3个文件；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">root@XXXX:/etc/pam.d<span class="comment"># ll |grep 'open'</span></span><br><span class="line">-rw-r--r-- 1 root root  354 4月  25  2019 openmediavault</span><br><span class="line">-rw-r--r-- 1 root root  186 4月  25  2019 openmediavault-common-auth</span><br><span class="line">-rw-r--r-- 1 root root  365 4月  25  2019 openmediavault-webgui</span><br><span class="line">root@ XXXX:/etc/pam.d<span class="comment"># cat openmediavault</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The PAM configuration file for openmediavault.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># openmediavault standard authentication.</span></span><br><span class="line">@include openmediavault-common-auth</span><br><span class="line"></span><br><span class="line"><span class="comment"># Standard Un*x authentication.</span></span><br><span class="line">@include common-auth</span><br><span class="line"></span><br><span class="line">account     required        pam_tally2.so</span><br><span class="line"></span><br><span class="line"><span class="comment"># Standard Un*x authorization.</span></span><br><span class="line">@include common-account</span><br><span class="line"></span><br><span class="line"><span class="comment"># Standard Un*x session setup and teardown.</span></span><br><span class="line">@include common-session</span><br><span class="line">root@Chainedbox:/etc/pam.d<span class="comment"># cat openmediavault-common-auth</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The PAM configuration file for openmediavault.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deny user access after 3 failed login attempts.</span></span><br><span class="line">auth        required        pam_tally2.so onerr=fail audit deny=3 unlock_time=180</span><br><span class="line">root@Chainedbox:/etc/pam.d<span class="comment"># cat openmediavault-webgui</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The PAM configuration file for the openmediavault WebGUI.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># openmediavault standard authentication.</span></span><br><span class="line">@include openmediavault-common-auth</span><br><span class="line"></span><br><span class="line"><span class="comment"># Standard Un*x authentication.</span></span><br><span class="line">@include common-auth</span><br><span class="line"></span><br><span class="line">account     required        pam_tally2.so</span><br><span class="line"></span><br><span class="line"><span class="comment"># Standard Un*x authorization.</span></span><br><span class="line">@include common-account</span><br><span class="line"></span><br><span class="line"><span class="comment"># Standard Un*x session setup and teardown.</span></span><br><span class="line">@include common-session</span><br></pre></td></tr></table></figure><p>openmediavault主要使用了pam_tally2.so这个模块，主要配置项是<code>auth        required        pam_tally2.so onerr=fail audit deny=3 unlock_time=180</code><br>账户验证的时候如果3次失败，拒绝服务180s。</p><p>配置项相关的资料可以<a href="http://www.linux-pam.org/Linux-PAM-html/sag-pam_tally2.html" target="_blank" rel="noopener">点击链接</a>查看。</p><p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/managing_smart_cards/pam_configuration_files" target="_blank" rel="noopener">Redhat pam配置项</a>点击查看。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openmediavault </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>man命令详解</title>
      <link href="/2020/07/20/linux-man-command/"/>
      <url>/2020/07/20/linux-man-command/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>对于Linux的学习，man命令的了解至关重要。换一句话说就是读官方文档的能力。</p><a id="more"></a><h2 id="man手册格式"><a href="#man手册格式" class="headerlink" title="man手册格式"></a>man手册格式</h2><p>man手册是按章节分组的，每一个章节的内容都是不同类别的文档。man手册一般定义规则如下：</p><ul><li>第一部分 用户命令（user commands）</li><li>第二部分 系统调用（system calls）</li><li>第三部分 库函数 （library functions ）</li><li>第四部分 特殊文件(通常位于 /dev) （special files ）</li><li>第五部分 文件格式和规范 （file formats）</li><li>第六部分 游戏 （games）</li><li>第七部分 会议和杂集 （conventions and miscellany）</li><li>第八部分 管理和特权命令 （administration and privileged commands ）</li><li>第九部分 内核例程 （administration and privileged commands ）</li><li>第L部分 数学库函数 （math library functions）</li><li>第N部分  tcl 函数 （tcl functions ）</li></ul><p>如下<code>man ls</code>命令讲解：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LS(1)                     BSD General Commands Manual                    LS(1)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">     ls -- list directory contents</span><br><span class="line">     ······</span><br></pre></td></tr></table></figure><p>最左上角显示“LS（1）”，在这里，“LS”表示ls命令名称，而“（1）”表示该手册位于第一章</p><p> 一个手册 页面 包含若干个小节。</p><p>小节名称通常包括  NAME,    概述(SYNOPSIS),    配置(CONFIGURATION),    描述(DESCRIPTION),选项(OPTIONS),      退出状态(EXIT STATUS),       返回值(RETURN VALUE),  错误(ERRORS),环境(ENVIRONMENT),   文件(FILES),   版本(VERSIONS),   符合标准(CONFORMING TO),  注(NOTES),缺陷(BUGS), 示例(EXAMPLE), 作者(AUTHORS), 和 亦见(SEE ALSO).</p><p>以下规范适用于 概述(SYNOPSIS) 小节，也可作为其他小节的指南。</p><ul><li>加粗文本       按原样显示。</li><li>倾斜文本       用相应的参数进行替换。</li><li>[-abc]         “[ ]” 内的任意/全部参数都是可选的。</li><li>-a|-b          以“|”分隔的选项可以一起使用。</li><li>参数 …       参数 可以重复。</li><li>[表达式] …   “[ ]”内的整个 表达式 可以重复。</li></ul><h2 id="man命令用法"><a href="#man命令用法" class="headerlink" title="man命令用法"></a>man命令用法</h2><p>man命令选择章节的方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  man+章节号+命令</span></span><br><span class="line"> man 1 ls</span><br></pre></td></tr></table></figure><p>man命令打开手册后的快捷键：</p><ul><li><p><strong>翻屏</strong></p><ul><li>空格键：向文件尾部翻一屏</li><li>b : 向文件首部翻一屏</li><li>Ctrl + d: 向文件尾部翻半屏</li><li>Ctrl+u: 向文件首部翻半屏</li><li>Enter：向文件尾部翻一行</li><li>k: 向文件首部翻一行</li><li>g：跳转至首行</li><li>G：跳转至最后一行</li><li>#G：跳转至指定行,格式：数字+G</li></ul></li><li><p><strong>文本搜索</strong></p><pre><code>* /keyword: 从文件首部向文件尾部一次查找；不区分字符大小写* ?keyword：从文件尾部向文件首部依次查找      * n: 与查找命令方向相同      * N： 与查找命令方向相反 * q: 退出</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux修改登录提示语(MOTD)</title>
      <link href="/2020/07/20/linux-login-message/"/>
      <url>/2020/07/20/linux-login-message/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong> 意外发现linux登录的提示可以修改，可以显示当前的系统信息以及自定义欢迎语等功能，让我有了好奇心。下文主要介绍update-motd方式修改。</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>在Linux系统中，该功能称之为今日消息(message of the day),简称“<strong>MOTD</strong>”。我完全没想到这个定义为“今日消息”，翻译过来有点土味，哈哈</p><p>我现在使用的是armbian系统，MOTO跟Ubuntu是一样的，下面的命令相关显示也是armbian系统。</p><p>现在的登录显示为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Welcome to Armbian Stretch with Linux 5.4.2-rockchip64</span><br><span class="line"></span><br><span class="line">System load:   0.18 0.06 0.01  Up time:       22 days</span><br><span class="line">Memory usage:  66 % of 982MB  Zram usage:    91 % of 491Mb  IP:            192.168.1.133</span><br><span class="line">CPU temp:      63°C</span><br><span class="line">Usage of &#x2F;:    62% of 7.0G   storage&#x2F;:      100% of 2.7T</span><br><span class="line"></span><br><span class="line">[ General system configuration (beta): armbian-config ]</span><br><span class="line"></span><br><span class="line">Last login: Mon Jul 20 01:55:41 2020 from</span><br></pre></td></tr></table></figure><h2 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h2><p>当我发现欢迎语可以修改，第一时间查到了<code>/etc/motd</code>文件,而后发现该文件是动态文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@Chainedbox:~<span class="comment"># ll /etc/motd</span></span><br><span class="line">lrwxrwxrwx 1 root root 13 12月 11  2019 /etc/motd -&gt; /var/run/motd</span><br><span class="line">root@Chainedbox:~<span class="comment"># ll /var/run/motd</span></span><br><span class="line">ls: 无法访问<span class="string">'/var/run/motd'</span>: 没有那个文件或目录</span><br></pre></td></tr></table></figure><p>命令显示竟然是这个<code>/var/run/motd</code>文件不存在。分析文件的关系感觉就中断了。 /var/run 这个文件夹应该是系统启动动态生成的，那motd既然指向是这个文件夹，那查询下该目录下的motd相关文件。如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@Chainedbox:/var/run<span class="comment"># ll |grep motd</span></span><br><span class="line">-rw-r--r--  1 root     root      1716 7月  20 10:52 motd.dynamic</span><br></pre></td></tr></table></figure><p>查询到motd.dynamic，该文件就是生成的欢迎语。但是该文件的生成方式还是不明确，只有求证于Google，发现该文件由update-motd框架生成。</p><h2 id="update-motd框架"><a href="#update-motd框架" class="headerlink" title="update-motd框架"></a>update-motd框架</h2><h4 id="介绍update-motd"><a href="#介绍update-motd" class="headerlink" title="介绍update-motd"></a>介绍update-motd</h4><p>update-motd是一个动态生成MOTD的框架。配置文件在<code> /etc/update-motd.d/</code>。</p><p>配置文件的定义格式：NN-xxxxxx，其中NN是两位数字，表示它们在MOTD中显示的顺序，xxxxxx是自定义的脚本名称。而且该脚本就是bash脚本。</p><p>当update-motd生成好motd文件后，由<code>pam_motd</code>模块负责显示，pam_motd的主要功能就是显示motd文件。 对了，补充一点pam_motd显示文件最大64kb，所以不要自定义motd文件过大。</p><h2 id="简析系统update-motd脚本"><a href="#简析系统update-motd脚本" class="headerlink" title="简析系统update-motd脚本"></a>简析系统update-motd脚本</h2><p>我的<code>/etc/update-motd.d/</code>目录下脚本如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@Chainedbox:/var/run<span class="comment"># ll /etc/update-motd.d/</span></span><br><span class="line">总用量 28</span><br><span class="line">-rwxr-xr-x 1 root root  979 11月 22  2019 10-armbian-header</span><br><span class="line">-rwxr-xr-x 1 root root 7971 10月 26  2019 30-armbian-sysinfo</span><br><span class="line">-rwxr-xr-x 1 root root  815 10月 26  2019 35-armbian-tips</span><br><span class="line">-rwxr-xr-x 1 root root  885 10月 26  2019 40-armbian-updates</span><br><span class="line">-rwxr-xr-x 1 root root  902 10月 26  2019 41-armbian-config</span><br><span class="line">-rwxr-xr-x 1 root root  553 10月 26  2019 98-armbian-autoreboot-warn</span><br></pre></td></tr></table></figure><p>脚本的执行顺序为10-&gt;98,由小到大。</p><p>文章开始时，显示了当前系统信息。主要信息显示为<code>30-armbian-sysinfo</code>脚本。显示脚本如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Copyright (c) Authors: http://www.armbian.com/authors</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This file is licensed under the terms of the GNU General Public</span></span><br><span class="line"><span class="comment"># License version 2. This program is licensed "as is" without any</span></span><br><span class="line"><span class="comment"># warranty of any kind, whether express or implied.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DO NOT EDIT THIS FILE but add config options to /etc/default/armbian-motd</span></span><br><span class="line"><span class="comment"># generate system information</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line"></span><br><span class="line">THIS_SCRIPT=<span class="string">"sysinfo"</span></span><br><span class="line">MOTD_DISABLE=<span class="string">""</span></span><br><span class="line">STORAGE=/dev/sda1</span><br><span class="line">SHOW_IP_PATTERN=<span class="string">"^[ewr].*|^br.*|^lt.*|^umts.*"</span></span><br><span class="line"></span><br><span class="line">CPU_TEMP_LIMIT=45</span><br><span class="line">AMB_TEMP_LIMIT=40</span><br><span class="line"></span><br><span class="line">[[ -f /etc/default/armbian-motd ]] &amp;&amp; . /etc/default/armbian-motd</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> <span class="variable">$MOTD_DISABLE</span>; <span class="keyword">do</span></span><br><span class="line">[[ <span class="variable">$f</span> == <span class="variable">$THIS_SCRIPT</span> ]] &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># don't edit below here</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">display</span></span>() &#123;</span><br><span class="line"><span class="comment"># $1=name $2=value $3=red_limit $4=minimal_show_limit $5=unit $6=after $7=acs/desc&#123;</span></span><br><span class="line"><span class="comment"># battery red color is opposite, lower number</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">"Battery"</span> ]]; <span class="keyword">then</span> <span class="built_in">local</span> great=<span class="string">"&lt;"</span>; <span class="keyword">else</span> <span class="built_in">local</span> great=<span class="string">"&gt;"</span>; <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="string">"<span class="variable">$2</span>"</span> &amp;&amp; <span class="string">"<span class="variable">$2</span>"</span> &gt; <span class="string">"0"</span> &amp;&amp; (( <span class="string">"<span class="variable">$&#123;2%.*&#125;</span>"</span> -ge <span class="string">"<span class="variable">$4</span>"</span> )) ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"%-14s%s"</span> <span class="string">"<span class="variable">$1</span>:"</span></span><br><span class="line"><span class="keyword">if</span> awk <span class="string">"BEGIN&#123;exit ! (<span class="variable">$2</span> <span class="variable">$great</span> <span class="variable">$3</span>)&#125;"</span>; <span class="keyword">then</span> <span class="built_in">echo</span> -ne <span class="string">"\e[0;91m <span class="variable">$2</span>"</span>; <span class="keyword">else</span> <span class="built_in">echo</span> -ne <span class="string">"\e[0;92m <span class="variable">$2</span>"</span>; <span class="keyword">fi</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"%-1s%s\x1B[0m"</span> <span class="string">"<span class="variable">$5</span>"</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"%-11s%s\t"</span> <span class="string">"<span class="variable">$6</span>"</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125; <span class="comment"># display</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getboardtemp</span></span>() &#123;</span><br><span class="line"><span class="keyword">if</span> [ -f /etc/armbianmonitor/datasources/soctemp ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> raw_temp &lt;/etc/armbianmonitor/datasources/soctemp 2&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ ! -z $(<span class="built_in">echo</span> <span class="string">"<span class="variable">$raw_temp</span>"</span> | grep -o <span class="string">"^[1-9][0-9]*\.\?[0-9]*$"</span>) ] &amp;&amp; (( $(<span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;raw_temp&#125;</span> &lt; 200"</span> |bc -l) )); <span class="keyword">then</span></span><br><span class="line"><span class="comment"># Allwinner legacy kernels output degree C</span></span><br><span class="line">board_temp=<span class="variable">$&#123;raw_temp&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">board_temp=$(awk <span class="string">'&#123;printf("%d",$1/1000)&#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;raw_temp&#125;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">elif</span> [ -f /etc/armbianmonitor/datasources/pmictemp ]; <span class="keyword">then</span></span><br><span class="line"><span class="comment"># fallback to PMIC temperature</span></span><br><span class="line">board_temp=$(awk <span class="string">'&#123;printf("%d",$1/1000)&#125;'</span> &lt;/etc/armbianmonitor/datasources/pmictemp)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125; <span class="comment"># getboardtemp</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">batteryinfo</span></span>() &#123;</span><br><span class="line"><span class="comment"># Battery info for Allwinner</span></span><br><span class="line">mainline_dir=<span class="string">"/sys/power/axp_pmu"</span></span><br><span class="line">legacy_dir=<span class="string">"/sys/class/power_supply"</span></span><br><span class="line"><span class="keyword">if</span> [[ -e <span class="string">"<span class="variable">$mainline_dir</span>"</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> status_battery_connected &lt; <span class="variable">$mainline_dir</span>/battery/connected 2&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$status_battery_connected</span>"</span> == <span class="string">"1"</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> status_battery_charging &lt; <span class="variable">$mainline_dir</span>/charger/charging</span><br><span class="line"><span class="built_in">read</span> status_ac_connect &lt; <span class="variable">$mainline_dir</span>/ac/connected</span><br><span class="line"><span class="built_in">read</span> battery_percent&lt; <span class="variable">$mainline_dir</span>/battery/capacity</span><br><span class="line"><span class="comment"># dispay charging / percentage</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$status_ac_connect</span>"</span> == <span class="string">"1"</span> &amp;&amp; <span class="string">"<span class="variable">$battery_percent</span>"</span> -lt <span class="string">"100"</span> ]]; <span class="keyword">then</span></span><br><span class="line">status_battery_text=<span class="string">" charging"</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="string">"<span class="variable">$status_ac_connect</span>"</span> == <span class="string">"1"</span> &amp;&amp; <span class="string">"<span class="variable">$battery_percent</span>"</span> -eq <span class="string">"100"</span> ]]; <span class="keyword">then</span></span><br><span class="line">status_battery_text=<span class="string">" charged"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">status_battery_text=<span class="string">" discharging"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">elif</span> [[ -e <span class="string">"<span class="variable">$legacy_dir</span>/axp813-ac"</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> status_battery_connected &lt; <span class="variable">$legacy_dir</span>/axp20x-battery/present</span><br><span class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$status_battery_connected</span>"</span> == <span class="string">"1"</span> ]]; <span class="keyword">then</span></span><br><span class="line">status_battery_text=<span class="string">" "</span>$(awk <span class="string">'&#123;print tolower($0)&#125;'</span> &lt; <span class="variable">$legacy_dir</span>/axp20x-battery/status)</span><br><span class="line">                <span class="built_in">read</span> status_ac_connect &lt; <span class="variable">$legacy_dir</span>/axp813-ac/present</span><br><span class="line">                <span class="built_in">read</span> battery_percent&lt; <span class="variable">$legacy_dir</span>/axp20x-battery/capacity</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">elif</span> [[ -e <span class="string">"<span class="variable">$legacy_dir</span>/battery"</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [[ ((<span class="string">"<span class="variable">$(cat $legacy_dir/battery/voltage_now)</span>"</span> -gt <span class="string">"5"</span> )) ]]; <span class="keyword">then</span></span><br><span class="line">status_battery_text=<span class="string">" "</span>$(awk <span class="string">'&#123;print tolower($0)&#125;'</span> &lt; <span class="variable">$legacy_dir</span>/battery/status)</span><br><span class="line"><span class="built_in">read</span> battery_percent &lt;<span class="variable">$legacy_dir</span>/battery/capacity</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125; <span class="comment"># batteryinfo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">ambienttemp</span></span>() &#123;</span><br><span class="line"><span class="comment"># define where w1 usually shows up</span></span><br><span class="line">        W1_DIR=<span class="string">"/sys/devices/w1_bus_master1/"</span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/armbianmonitor/datasources/ambienttemp ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">read</span> raw_temp &lt;/etc/armbianmonitor/datasources/ambienttemp 2&gt;/dev/null</span><br><span class="line">amb_temp=$(awk <span class="string">'&#123;printf("%d",$1/1000)&#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;raw_temp&#125;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$amb_temp</span></span><br><span class="line"><span class="keyword">elif</span> [[ -d <span class="variable">$W1_DIR</span> &amp;&amp; <span class="variable">$ONE_WIRE</span> == yes ]]; <span class="keyword">then</span></span><br><span class="line">device=$(ls -1 <span class="variable">$W1_DIR</span> | grep -Eo <span class="string">'^[0-9]&#123;1,4&#125;'</span> | head -1)</span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="variable">$device</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [[ -d <span class="variable">$&#123;W1_DIR&#125;</span><span class="variable">$&#123;device&#125;</span>/hwmon/hwmon0 ]]; <span class="keyword">then</span> hwmon=0; <span class="keyword">else</span> hwmon=1; <span class="keyword">fi</span></span><br><span class="line"><span class="built_in">read</span> raw_temp &lt; <span class="variable">$&#123;W1_DIR&#125;</span><span class="variable">$&#123;device&#125;</span>/hwmon/hwmon<span class="variable">$&#123;hwmon&#125;</span>/temp1_input 2&gt;/dev/null</span><br><span class="line">amb_temp=$(awk <span class="string">'&#123;printf("%d",$1/1000)&#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;raw_temp&#125;</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$amb_temp</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment"># read ambient temperature from USB device if available</span></span><br><span class="line"><span class="keyword">if</span> [[ ! -f /usr/bin/temper ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">return</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">amb_temp=$(temper -c 2&gt;/dev/null)</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;amb_temp&#125;</span> <span class="keyword">in</span></span><br><span class="line">*<span class="string">"find the USB device"</span>*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">amb_temp=$(awk <span class="string">'&#123;print $NF&#125;'</span> &lt;&lt;&lt;<span class="variable">$amb_temp</span> |  sed <span class="string">'s/C//g'</span>)</span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"scale=1;<span class="variable">$&#123;amb_temp&#125;</span>/1"</span> | grep -oE <span class="string">"\-?[[:digit:]]+\.[[:digit:]]"</span></span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125; <span class="comment"># ambienttemp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#function get_ip_addresses() &#123;</span></span><br><span class="line"><span class="comment">## return up to 2 IPv4 address(es) comma separated</span></span><br><span class="line"><span class="comment">#hostname -I | tr " " "\n" | \</span></span><br><span class="line"><span class="comment">#grep -E "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.)&#123;3&#125;(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$" | \</span></span><br><span class="line"><span class="comment">#tail -n2 | sed ':a;N;$!ba;s/\n/,/g'</span></span><br><span class="line"><span class="comment">#&#125; # get_ip_addresses</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">get_ip_addresses</span></span>() &#123;</span><br><span class="line"><span class="built_in">local</span> ips=()</span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> /sys/class/net/*; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">local</span> intf=$(basename <span class="variable">$f</span>)</span><br><span class="line"><span class="comment"># match only interface names starting with e (Ethernet), br (bridge), w (wireless), r (some Ralink drivers use ra&lt;number&gt; format)</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$intf</span> =~ <span class="variable">$SHOW_IP_PATTERN</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">local</span> tmp=$(ip -4 addr show dev <span class="variable">$intf</span> | awk <span class="string">'/inet/ &#123;print $2&#125;'</span> | cut -d<span class="string">'/'</span> -f1)</span><br><span class="line"><span class="comment"># add both name and IP - can be informative but becomes ugly with long persistent/predictable device names</span></span><br><span class="line"><span class="comment">#[[ -n $tmp ]] &amp;&amp; ips+=("$intf: $tmp")</span></span><br><span class="line"><span class="comment"># add IP only</span></span><br><span class="line">[[ -n <span class="variable">$tmp</span> ]] &amp;&amp; ips+=(<span class="string">"<span class="variable">$tmp</span>"</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;ips[@]&#125;</span>"</span></span><br><span class="line">&#125; <span class="comment"># get_ip_addresses</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">storage_info</span></span>() &#123;</span><br><span class="line"><span class="comment"># storage info</span></span><br><span class="line">RootInfo=$(df -h /)</span><br><span class="line">root_usage=$(awk <span class="string">'/\// &#123;print $(NF-1)&#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;RootInfo&#125;</span> | sed <span class="string">'s/%//g'</span>)</span><br><span class="line">root_total=$(awk <span class="string">'/\// &#123;print $(NF-4)&#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;RootInfo&#125;</span>)</span><br><span class="line">StorageInfo=$(df -h <span class="variable">$STORAGE</span> 2&gt;/dev/null | grep <span class="variable">$STORAGE</span>)</span><br><span class="line"><span class="keyword">if</span> [[ -n <span class="string">"<span class="variable">$&#123;StorageInfo&#125;</span>"</span> &amp;&amp; <span class="variable">$&#123;RootInfo&#125;</span> != *<span class="variable">$STORAGE</span>* ]]; <span class="keyword">then</span></span><br><span class="line">storage_usage=$(awk <span class="string">'/\// &#123;print $(NF-1)&#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;StorageInfo&#125;</span> | sed <span class="string">'s/%//g'</span>)</span><br><span class="line">storage_total=$(awk <span class="string">'/\// &#123;print $(NF-4)&#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;StorageInfo&#125;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">&#125; <span class="comment"># storage_info</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># query various systems and send some stuff to the background for overall faster execution.</span></span><br><span class="line"><span class="comment"># Works only with ambienttemp and batteryinfo since A20 is slow enough :)</span></span><br><span class="line">amb_temp=$(ambienttemp &amp;)</span><br><span class="line">ip_address=$(get_ip_addresses &amp;)</span><br><span class="line">batteryinfo</span><br><span class="line">storage_info</span><br><span class="line">getboardtemp</span><br><span class="line">critical_load=$(( 1 + $(grep -c processor /proc/cpuinfo) / 2 ))</span><br><span class="line"></span><br><span class="line"><span class="comment"># get uptime, logged in users and load in one take</span></span><br><span class="line">UptimeString=$(uptime | tr -d <span class="string">','</span>)</span><br><span class="line">time=$(awk -F<span class="string">" "</span> <span class="string">'&#123;print $3" "$4&#125;'</span> &lt;&lt;&lt;<span class="string">"<span class="variable">$&#123;UptimeString&#125;</span>"</span>)</span><br><span class="line">load=<span class="string">"<span class="variable">$(awk -F"average: " '&#123;print $2&#125;'&lt;&lt;&lt;"$&#123;UptimeString&#125;")</span>"</span></span><br><span class="line">users=<span class="string">"<span class="variable">$(awk -F" user" '&#123;print $1&#125;'&lt;&lt;&lt;"$&#123;UptimeString&#125;")</span>"</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$&#123;time&#125;</span> <span class="keyword">in</span></span><br><span class="line">1:*) <span class="comment"># 1-2 hours</span></span><br><span class="line">time=$(awk -F<span class="string">" "</span> <span class="string">'&#123;print $3" hour"&#125;'</span> &lt;&lt;&lt;<span class="string">"<span class="variable">$&#123;UptimeString&#125;</span>"</span>)</span><br><span class="line">;;</span><br><span class="line">*:*) <span class="comment"># 2-24 hours</span></span><br><span class="line">time=$(awk -F<span class="string">" "</span> <span class="string">'&#123;print $3" hours"&#125;'</span> &lt;&lt;&lt;<span class="string">"<span class="variable">$&#123;UptimeString&#125;</span>"</span>)</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># memory and swap</span></span><br><span class="line">mem_info=$(LC_ALL=C free -w 2&gt;/dev/null | grep <span class="string">"^Mem"</span> || LC_ALL=C free | grep <span class="string">"^Mem"</span>)</span><br><span class="line">memory_usage=$(awk <span class="string">'&#123;printf("%.0f",(($2-($4+$6+$7))/$2) * 100)&#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;mem_info&#125;</span>)</span><br><span class="line">memory_total=$(awk <span class="string">'&#123;printf("%d",$2/1024)&#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;mem_info&#125;</span>)</span><br><span class="line">swap_info=$(LC_ALL=C free -m | grep <span class="string">"^Swap"</span>)</span><br><span class="line">swap_usage=$( (awk <span class="string">'/Swap/ &#123; printf("%3.0f", $3/$2*100) &#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;swap_info&#125;</span> 2&gt;/dev/null || <span class="built_in">echo</span> 0) | tr -c -d <span class="string">'[:digit:]'</span>)</span><br><span class="line">swap_total=$(awk <span class="string">'&#123;print $(2)&#125;'</span> &lt;&lt;&lt;<span class="variable">$&#123;swap_info&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># display info</span></span><br><span class="line">display <span class="string">"System load"</span> <span class="string">"<span class="variable">$&#123;load%% *&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;critical_load&#125;</span>"</span> <span class="string">"0"</span> <span class="string">""</span> <span class="string">"<span class="variable">$&#123;load#* &#125;</span>"</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"Up time:       \x1B[92m%s\x1B[0m\t\t"</span> <span class="string">"<span class="variable">$time</span>"</span></span><br><span class="line">display <span class="string">"Local users"</span> <span class="string">"<span class="variable">$&#123;users##* &#125;</span>"</span> <span class="string">"3"</span> <span class="string">"2"</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span> <span class="comment"># fixed newline</span></span><br><span class="line">display <span class="string">"Memory usage"</span> <span class="string">"<span class="variable">$memory_usage</span>"</span> <span class="string">"70"</span> <span class="string">"0"</span> <span class="string">" %"</span> <span class="string">" of <span class="variable">$&#123;memory_total&#125;</span>MB"</span></span><br><span class="line">display <span class="string">"Zram usage"</span> <span class="string">"<span class="variable">$swap_usage</span>"</span> <span class="string">"75"</span> <span class="string">"0"</span> <span class="string">" %"</span> <span class="string">" of <span class="variable">$swap_total</span>"</span><span class="string">"Mb"</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"IP:            "</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">"\x1B[92m%s\x1B[0m"</span> <span class="string">"<span class="variable">$ip_address</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span> <span class="comment"># fixed newline</span></span><br><span class="line">a=0;b=0;c=0</span><br><span class="line">display <span class="string">"CPU temp"</span> <span class="string">"<span class="variable">$board_temp</span>"</span> <span class="variable">$CPU_TEMP_LIMIT</span> <span class="string">"0"</span> <span class="string">"°C"</span> <span class="string">""</span> ; a=$?</span><br><span class="line">display <span class="string">"Ambient temp"</span> <span class="string">"<span class="variable">$amb_temp</span>"</span> <span class="variable">$AMB_TEMP_LIMIT</span> <span class="string">"0"</span> <span class="string">"°C"</span> <span class="string">""</span> ; b=$?</span><br><span class="line">(( (<span class="variable">$a</span>+<span class="variable">$b</span>) &gt;0 )) &amp;&amp; <span class="built_in">echo</span> <span class="string">""</span> <span class="comment"># new line only if some value is displayed</span></span><br><span class="line">display <span class="string">"Usage of /"</span> <span class="string">"<span class="variable">$root_usage</span>"</span> <span class="string">"90"</span> <span class="string">"1"</span> <span class="string">"%"</span> <span class="string">" of <span class="variable">$root_total</span>"</span></span><br><span class="line">display <span class="string">"storage/"</span> <span class="string">"<span class="variable">$storage_usage</span>"</span> <span class="string">"90"</span> <span class="string">"1"</span> <span class="string">"%"</span> <span class="string">" of <span class="variable">$storage_total</span>"</span></span><br><span class="line">display <span class="string">"Battery"</span> <span class="string">"<span class="variable">$battery_percent</span>"</span> <span class="string">"20"</span> <span class="string">"1"</span> <span class="string">"%"</span> <span class="string">"<span class="variable">$status_battery_text</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br></pre></td></tr></table></figure><p>内存,磁盘，网络的信息都可以通过命令获取到，我重点关注了下CPU温度的获取。</p><p>脚本中CPU温度获取的方法为ambienttemp()。</p><p>温度的获取是通过读取<code>/etc/armbianmonitor/datasources/soctemp</code>文件显示。该文件链接至/sys/devices/virtual/thermal/thermal_zone0/temp文件，通过该文件读取的参数除以1000，得到CPU温度</p><p>脚本写的挺好的，值的学习。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> motd </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nmap资料整理</title>
      <link href="/2020/07/17/understanding-nmap/"/>
      <url>/2020/07/17/understanding-nmap/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>工作中，经常用到Nmap去检查端口，探测主机服务。实际上，Nmap除了这些，其他的功能也非常强大，扩展性非常强。你大概不能想到Nmap还能连接数据库查询表数据，执行相关sql。</p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Nmap 能够快速发现活动的主机和与该主机相关联的服务。Nmap 的功能还可以通过结合 Nmap 脚本引擎（ NSE）进一步被扩展。Nmap还有图形界面Zenmap，可以通过图形界面学习命令行nmap的使用，降低了学习成本。</p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><p>快速上手的方法，无他，多看文档。如下是相关文档：</p><ul><li><p>Nmap：<br><a href="https://nmap.org/man/zh/index.html" target="_blank" rel="noopener">https://nmap.org/man/zh/index.html</a></p></li><li><p>NSE：<br><a href="https://nmap.org/nsedoc/" target="_blank" rel="noopener">https://nmap.org/nsedoc/</a></p></li><li><p>Zenmap：<br><a href="https://nmap.org/book/zenmap.html" target="_blank" rel="noopener">https://nmap.org/book/zenmap.html</a></p></li></ul><p>如果你想多了解就查看文档吧，多说也是对文档的重复。</p><h2 id="脚本引擎NSE"><a href="#脚本引擎NSE" class="headerlink" title="脚本引擎NSE"></a>脚本引擎NSE</h2><p>Nmap扩展性强的地方是能够通过脚本引擎扩展功能（NSE），脚本都是通过lua语言编写，下面展示下mysql-info这个脚本查看mysql的相关信息(ip地址用XXX.XXX.XXX.XXX标识)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">➜  nmap --script mysql-info XXX.XXX.XXX.XXX</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-17 16:19 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> XXX.XXX.XXX.XXX </span><br><span class="line">Host is up (0.030s latency).</span><br><span class="line">Not shown: 995 filtered ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">53/tcp   open  domain</span><br><span class="line">80/tcp   open  http</span><br><span class="line">443/tcp  open  https</span><br><span class="line">3306/tcp open  mysql</span><br><span class="line">| mysql-info:</span><br><span class="line">|   Protocol: 10</span><br><span class="line">|   Version: 5.7.24-0ubuntu0.16.04.1-log</span><br><span class="line">|   Thread ID: 8732</span><br><span class="line">|   Capabilities flags: 63487</span><br><span class="line">|   Some Capabilities: DontAllowDatabaseTableColumn, Support41Auth, LongColumnFlag, LongPassword, SupportsLoadDataLocal, ConnectWithDatabase, Speaks41ProtocolOld, SupportsTransactions, IgnoreSpaceBeforeParenthesis, FoundRows, ODBCClient, InteractiveClient, Speaks41ProtocolNew, SupportsCompression, IgnoreSigpipes, SupportsMultipleResults, SupportsMultipleStatments, SupportsAuthPlugins</span><br><span class="line">|   Status: Autocommit</span><br><span class="line">|   Salt:</span><br><span class="line">| \x14]jy6vmpQ&lt;@vJv\x1F,\x15\x7F&amp;</span><br><span class="line">|_  Auth Plugin Name: mysql_native_password</span><br><span class="line"></span><br><span class="line">Nmap <span class="keyword">done</span>: 1 IP address (1 host up) scanned <span class="keyword">in</span> 7.72 seconds</span><br></pre></td></tr></table></figure><p>脚本扩展了非常多的功能，包括mysql mongo ssh snmp smb http pop3 等各种软件及协议的支持。</p><h2 id="Zenmap优势"><a href="#Zenmap优势" class="headerlink" title="Zenmap优势"></a>Zenmap优势</h2><p>多说一点Zenmap的优势：</p><ul><li>通过图形界面可以实时查看命令的组成变化。</li><li>可以在扫描一个网段后生成拓扑图</li><li>可以将常用的命令保存为配置，后面不用重复写复杂的Nmap命令</li></ul><p>实际在mac上使用，发现并不稳定。非常容易卡死，也可能是我更新系统版本的原因，所以还是推荐在Linux和windows环境上使用吧。</p><p><img src="nmap1.png" alt="Zenmap mac"></p><h2 id="Nmap相关项目"><a href="#Nmap相关项目" class="headerlink" title="Nmap相关项目"></a>Nmap相关项目</h2><p>项目：将nmap报告转换为XLS的Python脚本</p><p><a href="https://github.com/mrschyte/nmap-converter" target="_blank" rel="noopener">nmap-converter</a></p><p>项目：专门用于开发Nmap脚本的IDE</p><p><a href="https://github.com/s4n7h0/Halcyon" target="_blank" rel="noopener">Halcyon</a></p>]]></content>
      
      
      <categories>
          
          <category> network </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详细讲解U盘制作启动盘安装Linux</title>
      <link href="/2020/07/16/U-disk-install-linux/"/>
      <url>/2020/07/16/U-disk-install-linux/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>制作启动盘的方法有很多，现介绍下面一款软件的使用过程。</p><a id="more"></a><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>下载类似老毛桃的工具。linux安装老毛桃等PE软件不适用。下面我使用的是rufus，很轻量的一款启动盘制作工具，可以制作引导linux和windows等镜像。</p><p>下载路径如下：    </p><p><a href="http://rufus.akeo.ie/downloads/" target="_blank" rel="noopener">http://rufus.akeo.ie/downloads/</a></p><h2 id="运行界面"><a href="#运行界面" class="headerlink" title="运行界面"></a>运行界面</h2><p>在windows上点击运行rufus-2.17.exe。界面如下：</p><p><img src="u-disk1.png" alt="rufus界面"></p><h2 id="制作步骤"><a href="#制作步骤" class="headerlink" title="制作步骤"></a>制作步骤</h2><ol><li>选择要制作启动盘的U盘设备，分区方案可选MBR分区和GPT方案，一般默认即可。</li><li>选择文件系统FAT32、NTFS等文件系统，选择合适的即可，默认FAT32。</li><li>填写新U盘的名字（卷标）。</li><li>勾选格式化选项，第2-3项需要勾选，可直接默认。在创建启动盘后面，选择”iso”镜像，点击类光驱的图标，选中需要制作启动盘的linux iso镜像，如果想使用windows可以选择MS-IOS镜像，应该没有PE功能强大，还未使用过。</li><li>点击开始，等待格式化及写入完成即可。</li></ol><p><img src="u-disk2.png" alt="rufus界面"></p><p>到此结束！</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>来写写如何手动迁移hbase的数据</title>
      <link href="/2020/07/16/migrating-hbase-data/"/>
      <url>/2020/07/16/migrating-hbase-data/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>hbase数据迁移有多种方式，有静态的动态的，网上一堆。下面我说说上周实际使用import和export方式的过程。 </p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>HDFS是hadoop的分布式文件系统，hbase的数据存放在该文件系统内，”/“是相对的根目录。</p><p>hadoop对HDFS在命令行下可以做一些常用的操作，如cat、ls、mkdir、rm等，命令格式如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;bin/hadoop fs &lt;args&gt;</span><br></pre></td></tr></table></figure><p>对于本文档，需要了解几个hadoop的命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;bin/hadoop fs -mkdir   <span class="comment">#新建文件夹</span></span><br><span class="line">shell&gt;bin/hadoop fs -copyToLocal <span class="comment">#将HDFS里的文件复制到本地文件系统</span></span><br><span class="line">shell&gt;bin/hadoop fs -copyFromLocal </span><br><span class="line">shell&gt;bin/</span><br></pre></td></tr></table></figure><p>对于hbase数据的导出，我们需要了解下hbase提供的导入导出的工具。org.apache.hadoop.hbase.mapreduce.Driver 是hadoop jar的一个驱动类，给我提供了导入，导出，复制部分或全部表，计算表行数等功能。我们需要使用如下两个hbase shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; bin/hbase org.apache.hadoop.hbase.mapreduce.Export &lt;tablename&gt; &lt;outputdir&gt; </span><br><span class="line">shell&gt; bin/hbase org.apache.hadoop.hbase.mapreduce.Import &lt;tablename&gt; &lt;inputdir&gt;</span><br></pre></td></tr></table></figure><p>流程开始：</p><h2 id="源集群"><a href="#源集群" class="headerlink" title="源集群"></a>源集群</h2><p>在<strong>源</strong>集群master上，执行如下操作：</p><h3 id="首先检查hbase是否正常jps；如图"><a href="#首先检查hbase是否正常jps；如图" class="headerlink" title="首先检查hbase是否正常jps；如图"></a>首先检查hbase是否正常jps；如图</h3><p><img src="hbase1.png" alt="状态"></p><h3 id="关闭公司产品服务，使hbase的数据在迁移的过程中不被操作。"><a href="#关闭公司产品服务，使hbase的数据在迁移的过程中不被操作。" class="headerlink" title="关闭公司产品服务，使hbase的数据在迁移的过程中不被操作。"></a>关闭公司产品服务，使hbase的数据在迁移的过程中不被操作。</h3><h3 id="在HDFS上新过渡的数据存放路径"><a href="#在HDFS上新过渡的数据存放路径" class="headerlink" title="在HDFS上新过渡的数据存放路径"></a>在HDFS上新过渡的数据存放路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;bin/hadoop fs -mkdir /db/</span><br></pre></td></tr></table></figure><h3 id="导出hbase表到过渡路径，indval20170116为文件名。"><a href="#导出hbase表到过渡路径，indval20170116为文件名。" class="headerlink" title="导出hbase表到过渡路径，indval20170116为文件名。"></a>导出hbase表到过渡路径，indval20170116为文件名。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;hbase org.apache.hadoop.hbase.mapreduce.Driver <span class="built_in">export</span> INDICATOR_VALUE /db/indval20170116</span><br></pre></td></tr></table></figure><h3 id="复制数据到操作系统本地文件系统"><a href="#复制数据到操作系统本地文件系统" class="headerlink" title="复制数据到操作系统本地文件系统"></a>复制数据到操作系统本地文件系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;hadoop fs -copyToLocal /db/indval20170116 /home/tocc/indval20170116</span><br><span class="line">ps：如数据量过大，可做如下打包压缩命令</span><br><span class="line">tar cvf - /home/XXX/indval20170116 | gzip &gt; indval20170116.tar.gz</span><br></pre></td></tr></table></figure><h3 id="传数据到目标集群的机器上。可利用sftp，scp。"><a href="#传数据到目标集群的机器上。可利用sftp，scp。" class="headerlink" title="传数据到目标集群的机器上。可利用sftp，scp。"></a>传数据到目标集群的机器上。可利用sftp，scp。</h3><h2 id="目标集群"><a href="#目标集群" class="headerlink" title="目标集群"></a>目标集群</h2><p>在目标集群master上，执行如下操作：</p><h3 id="如使用压缩命令，则解压缩"><a href="#如使用压缩命令，则解压缩" class="headerlink" title="如使用压缩命令，则解压缩"></a>如使用压缩命令，则解压缩</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf indval20170116.tar.gz</span><br></pre></td></tr></table></figure><h3 id="建立数据过渡路径"><a href="#建立数据过渡路径" class="headerlink" title="建立数据过渡路径"></a>建立数据过渡路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;bin/hadoop fs -mkdir /db/</span><br></pre></td></tr></table></figure><h3 id="将数据文件导入到HDFS"><a href="#将数据文件导入到HDFS" class="headerlink" title="将数据文件导入到HDFS"></a>将数据文件导入到HDFS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -copyFromLocal /home/XXXX/indval20170116  /db/indval20170116</span><br></pre></td></tr></table></figure><h3 id="建立hbase数据表"><a href="#建立hbase数据表" class="headerlink" title="建立hbase数据表"></a>建立hbase数据表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;hbase shell</span><br><span class="line"> &gt; create <span class="string">'INDICATOR_VALUE'</span>,&#123;NAME =&gt; <span class="string">'F1'</span>, VERSIONS =&gt; <span class="string">'10'</span>&#125; <span class="comment">#创建hbase表</span></span><br><span class="line"> &gt; list <span class="comment">#验证表已建好</span></span><br></pre></td></tr></table></figure><h3 id="将数据文件导入表"><a href="#将数据文件导入表" class="headerlink" title="将数据文件导入表"></a>将数据文件导入表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;hbase org.apache.hadoop.hbase.mapreduce.Driver import INDICATOR_VALUE /db/indval20170116</span><br></pre></td></tr></table></figure><h3 id="最后到hbase-shell里面验证下数据数据是否导入成功。"><a href="#最后到hbase-shell里面验证下数据数据是否导入成功。" class="headerlink" title="最后到hbase shell里面验证下数据数据是否导入成功。"></a>最后到hbase shell里面验证下数据数据是否导入成功。</h3><p><img src="hbase2.png" alt="导入"></p><p>统计habse行数：<br><img src="hbase3.png" alt="行数"></p><p>到此，数据迁移完成，查看指标数据是否正常。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hbase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用brew安装指定版本node</title>
      <link href="/2020/07/16/brew-node-choose-version/"/>
      <url>/2020/07/16/brew-node-choose-version/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong> 手贱升级brew update， 导致node升级到14版本，hexo的node使用时总是报错，所以需要退回到node@10版本</p><a id="more"></a><h2 id="查询支持的node版本"><a href="#查询支持的node版本" class="headerlink" title="查询支持的node版本"></a>查询支持的node版本</h2><p>使用brew search命令查询版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  brew search node__</span><br><span class="line">==&gt; Formulae</span><br><span class="line">libbitcoin-node       node ✔                node-sass             node@12               nodebrew              nodenv</span><br><span class="line">llnode                node-build            node@10              node_exporter         nodeenv</span><br><span class="line">==&gt; Casks</span><br><span class="line">font-ubuntu-mono-derivative-powerline        nodebox                                      nodeclipse</span><br><span class="line"></span><br><span class="line">If you meant <span class="string">"node"</span> specifically:</span><br><span class="line">It was migrated from homebrew/cask to homebrew/core.</span><br></pre></td></tr></table></figure><p> 可以看到node@10，选择改版本</p><h2 id="安装node-10"><a href="#安装node-10" class="headerlink" title="安装node@10"></a>安装node@10</h2><p>使用 brew install 安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> ➜ brew install node@10</span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Downloading https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/bottles/node%4010-10.21.0.catalina.bottle.tar.gz</span><br><span class="line">Already downloaded: /Users/bellpost/Library/Caches/Homebrew/downloads/2e9beb948fb8164bda6f4bb80e76c6c0c709ba114486f6825bb0cdd9f847ec0c--node@10-10.21.0.catalina.bottle.tar.gz</span><br><span class="line">==&gt; Pouring node@10-10.21.0.catalina.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">node@10 is keg-only, <span class="built_in">which</span> means it was not symlinked into /usr/<span class="built_in">local</span>,</span><br><span class="line">because this is an alternate version of another formula.</span><br><span class="line"></span><br><span class="line">If you need to have node@10 first <span class="keyword">in</span> your PATH run:</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">'export PATH="/usr/local/opt/node@10/bin:$PATH"'</span> &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">For compilers to find node@10 you may need to <span class="built_in">set</span>:</span><br><span class="line">  <span class="built_in">export</span> LDFLAGS=<span class="string">"-L/usr/local/opt/node@10/lib"</span></span><br><span class="line">  <span class="built_in">export</span> CPPFLAGS=<span class="string">"-I/usr/local/opt/node@10/include"</span></span><br></pre></td></tr></table></figure><h2 id="将node-10链接为默认版本"><a href="#将node-10链接为默认版本" class="headerlink" title="将node@10链接为默认版本"></a>将node@10链接为默认版本</h2><p>使用命令brew link，然后根据提示执行，写入默认环境中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH="/usr/local/opt/node@10/bin:$PATH"'</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜brew link node@10</span><br><span class="line">Warning: node@10 is keg-only and must be linked with --force</span><br><span class="line"></span><br><span class="line">If you need to have this software first <span class="keyword">in</span> your PATH instead consider running:</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">'export PATH="/usr/local/opt/node@10/bin:$PATH"'</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><p>这样就可以啦，输入node -v 看下当前版本号吧！</p>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>squid实现突破内网上网</title>
      <link href="/2020/07/16/use-squid-break-through-the-internet/"/>
      <url>/2020/07/16/use-squid-break-through-the-internet/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>实现代理上网的前提：在局域网内有一台可以访问外网的机器，并可以在上面部署squid程序。</p><a id="more"></a><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>在反向代理的领域，squid的市场份额，虽然不断被nginx，apache等新兴的软件占领，并且nginx也提供了缓存功能。但是依然不可掩盖squid的老牌实力。</p><p>下面简要介绍下squid的功能及配置。</p><ul><li>缓存的目录一般在/var/spool/squid，日志目录在/var/log/squid。</li><li>每通过代理访问一次都可以查看日志目录下面的access.log文件，查看访问记录。</li><li>可在配置文件中的其他设置<ul><li>http_port [IP:]3128 可添加IP或改变端口</li><li>cache_mem 128 MB 可设置squid使用的做缓存的内存大小</li><li>visible_hostname - 可以在状态/错误信息中看到的 hostname</li><li>cache_dir - 指定缓存文件夹</li></ul></li></ul><p>squid还支持acl列表访问控制，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">acl ip_acl src 192.168.1.0&#x2F;24</span><br><span class="line">http_access allow ip_acl</span><br><span class="line">http_access deny all</span><br></pre></td></tr></table></figure><p>第一行，acl定义列表，ip_acl是任意指定的列表名称，src表示源IP<br>第二行，允许ip_acl的acl列表里的ip网段内的ip访问<br>第三行，拒绝所有http访问，除了被允许的ip网段。</p><p>   突破内网使用squid实现正向代理即可。步骤简单。如下：<br>   在开始之前，使用ping命令保证各机器能连通，保证数据不被防火墙过滤。可关闭防火墙。不然到后面会失败。</p><h3 id="安装squid软件"><a href="#安装squid软件" class="headerlink" title="安装squid软件"></a>安装squid软件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># yum install -y squid</span></span><br></pre></td></tr></table></figure><h3 id="修改squid配置"><a href="#修改squid配置" class="headerlink" title="修改squid配置"></a>修改squid配置</h3><p>配置文件位于 /etc/squid/squid.conf<br>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/squid/squid.conf</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># And finally deny all other access to this proxy</span></span><br><span class="line">http_access deny all</span><br><span class="line">为</span><br><span class="line"><span class="comment"># And finally deny all other access to this proxy</span></span><br><span class="line">http_access  allow all</span><br></pre></td></tr></table></figure><h3 id="检查配置文件并初始化缓存目录"><a href="#检查配置文件并初始化缓存目录" class="headerlink" title="检查配置文件并初始化缓存目录"></a>检查配置文件并初始化缓存目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># squid -k check</span></span><br><span class="line">[root@Workbench ~]<span class="comment"># squid -z</span></span><br></pre></td></tr></table></figure><p>启动squid在后台运行。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/local/squid/sbin/squid -s</span></span><br></pre></td></tr></table></figure><p>停止 squid </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/local/squid/sbin/squid -k shutdown</span></span><br></pre></td></tr></table></figure><h3 id="重启该服务并验证"><a href="#重启该服务并验证" class="headerlink" title="重启该服务并验证"></a>重启该服务并验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># service squid restart</span></span><br><span class="line">[root@Workbench ~]<span class="comment"># netstat -nltp |grep 3128</span></span><br></pre></td></tr></table></figure><h3 id="在不能访问内网的机器上执行"><a href="#在不能访问内网的机器上执行" class="headerlink" title="在不能访问内网的机器上执行"></a>在不能访问内网的机器上执行</h3><p>临时使用代理，重启失效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># export http_proxy=http://[Squid Server IP]:3128</span></span><br></pre></td></tr></table></figure><p>永久使用则在/etc/profile末尾加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=http://[Squid Server IP]:3128</span><br></pre></td></tr></table></figure><p>然后 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure><p>验证http代理开启成功,若成功使用以下命令会在当前目录下，下载一个index.html文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># wget www.baidu.com</span></span><br></pre></td></tr></table></figure><p>ps：若需要访问内网的机器需要用ftp，https等协议访问外网。则增加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> https_proxy=[Squid Server IP]:3128</span><br><span class="line"><span class="built_in">export</span> ftp_proxy=[Squid Server IP]:3128</span><br></pre></td></tr></table></figure><p>现在我们就可以用yum去安装软件或者用浏览器上网了，但是如果使用ping命令去ping百度是不通的。为什么呢？</p><p>由于ping命令使用的是ICMP协议是属于网络层的协议，不能通过第七层应用层的代理，并且ping使用的协议不是http或是ftp协议。</p><p>如果是windows主机，可以在浏览器的internet选项–&gt;连接–&gt;局域网设置中配置代理服务器。</p><p> <img src="use-squid.jpeg" alt="局域网设置"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>牛奶品质探讨</title>
      <link href="/2020/07/16/milk-quality/"/>
      <url>/2020/07/16/milk-quality/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>在推上看到有人讨论喝国内牛奶腹泻，喝国外牛奶从不腹泻，引起了我的好奇心，难道加工工艺有很大差别吗？还是奶质的差别？还是制度约束不够呢？这些问题我也无从回答，只是搜集相关资料整理。</p><a id="more"></a><h2 id="关于工艺"><a href="#关于工艺" class="headerlink" title="关于工艺"></a>关于工艺</h2><p>牛奶保质的工艺大致分为三种 <strong>超高温消毒法(UHT)、保久乳及巴氏消毒法</strong>  ，按现有的技术手段，技术实现的难度不大，特别是国内如此大的市场，按理来说，不存在缺资金使工艺不到位的情况。</p><p>工艺的优缺点一览：</p><table><thead><tr><th align="left">工艺</th><th align="center">消毒温度</th><th align="center">保质期</th><th align="center">营养价值</th><th align="center">价格</th><th align="right">微生物</th><th align="right">消化</th></tr></thead><tbody><tr><td align="left">超高温消毒法</td><td align="center">135~150°C</td><td align="center">室温保存半年以上</td><td align="center">低</td><td align="center">便宜</td><td align="right">无</td><td align="right">好</td></tr><tr><td align="left">保久乳</td><td align="center">128°C</td><td align="center">1-3月左右</td><td align="center">中等</td><td align="center">中等</td><td align="right">少量</td><td align="right">中等</td></tr><tr><td align="left">巴氏消毒法</td><td align="center">72-75°C</td><td align="center">室温1-2日冷藏6-10日</td><td align="center">高</td><td align="center">贵</td><td align="right">部分</td><td align="right">难</td></tr></tbody></table><h2 id="关于制度"><a href="#关于制度" class="headerlink" title="关于制度"></a>关于制度</h2><p>  牛奶质量问题一直是国内消费者担忧的关键，牛奶的安全事件一直不能在根本上消除，所以制度不完善，监督不到位，应该还是突出问题。</p><h2 id="关于奶质"><a href="#关于奶质" class="headerlink" title="关于奶质"></a>关于奶质</h2><p>   这个更是无从说起，喝牛奶最重要的是补充蛋白质。在蛋白质的含量上不同奶源可能不同，但这不是构成微生物不达标的因素。</p><h2 id="渠道问题"><a href="#渠道问题" class="headerlink" title="渠道问题"></a>渠道问题</h2><p>   商品流通跟渠道的关系重大，特别是奶制品，保质期时间短，存放环境要求高，不同公司对于监督渠道保存奶品的环境不够有力，也是牛奶问题的关键因素。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p> 对于消费者，我们不可避免的要购买奶制品，如何才能喝到最好品质的牛奶呢？</p><ul><li>购买生产日期最近的奶制品，时间越长，微生物增加，乳酸过多使牛奶变酸</li><li>观察存放奶制品的环境是否是低温环境</li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> milk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew镜像源替换及还原</title>
      <link href="/2020/07/16/homebrew-source-replace-and-restore/"/>
      <url>/2020/07/16/homebrew-source-replace-and-restore/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong> Homebrew以前使用阿里云镜像源一直体验不佳，比较多的包请求不到，需要编译，十分慢及耗资源，所以换成清华大学镜像源,在此记录下。</p><a id="more"></a><h2 id="Homebrew镜像源替换"><a href="#Homebrew镜像源替换" class="headerlink" title="Homebrew镜像源替换"></a>Homebrew镜像源替换</h2><ul><li>替换清华大学镜像源<br> 将下面代码全部执行即可，下同</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> brew 程序本身，Homebrew相同</span></span><br><span class="line">git -C "$(brew --repo)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以下针对 mac OS 系统上的 Homebrew</span></span><br><span class="line">git -C "$(brew --repo homebrew/core)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask-fonts)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask-fonts.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask-drivers)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask-drivers.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更换后测试工作是否正常</span></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><ul><li>替换阿里云镜像源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 替换brew.git:</span></span><br><span class="line">git -C  "$(brew --repo)"  remote set-url origin https://mirrors.aliyun.com/homebrew/brew.git</span><br><span class="line"><span class="meta">#</span><span class="bash"> 替换homebrew-core.git:</span></span><br><span class="line">git git -C "$(brew --repo homebrew/core)" remote set-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git</span><br></pre></td></tr></table></figure><p>执行时出现如下错误，是没有安装相关homebrew的cask-fonts及cask-drivers组件，不影响homebrew正常使用，如果你想安装，则查看下面的解决办法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fatal: cannot change to '/usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask-fonts': No such file or directory</span><br><span class="line">fatal: cannot change to '/usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask-drivers': No such file or directory</span><br></pre></td></tr></table></figure><p><strong>解决办法</strong>:  安装相关组件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap homebrew/cask-fonts</span><br><span class="line">brew tap homebrew/cask-drivers</span><br></pre></td></tr></table></figure><h2 id="Homebrew还原镜像源"><a href="#Homebrew还原镜像源" class="headerlink" title="Homebrew还原镜像源"></a>Homebrew还原镜像源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> brew 程序本身，Homebrew/Linuxbrew 相同</span></span><br><span class="line">git -C "$(brew --repo)" remote set-url origin https://github.com/Homebrew/brew.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以下针对 mac OS 系统上的 Homebrew</span></span><br><span class="line">git -C "$(brew --repo homebrew/core)" remote set-url origin https://github.com/Homebrew/homebrew-core.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask)" remote set-url origin https://github.com/Homebrew/homebrew-cask.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask-fonts)" remote set-url origin https://github.com/Homebrew/homebrew-cask-fonts.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask-drivers)" remote set-url origin https://github.com/Homebrew/homebrew-cask-drivers.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更换后测试工作是否正常</span></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><h2 id="Homebrew-bottles-镜像替换"><a href="#Homebrew-bottles-镜像替换" class="headerlink" title="Homebrew-bottles 镜像替换"></a>Homebrew-bottles 镜像替换</h2><ul><li>临时替换</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles</span><br></pre></td></tr></table></figure><ul><li>长期替换（bash）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles' &gt;&gt; ~/.bash_profile</span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><ul><li>长期替换（zsh）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles' &gt;&gt; ~/.zshrc</span><br><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/" target="_blank" rel="noopener">清华Homebrew镜像使用帮助</a></p><p><a href="https://developer.aliyun.com/mirror/homebrew" target="_blank" rel="noopener">阿里Homebrew镜像使用帮助</a></p>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL5.5编译安装</title>
      <link href="/2020/07/15/mysql-build-install/"/>
      <url>/2020/07/15/mysql-build-install/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong> 一篇老的blog，写的不好，勿怪。</p><a id="more"></a><h2 id="一-安装环境"><a href="#一-安装环境" class="headerlink" title="一.安装环境"></a>一.安装环境</h2><ul><li>系统版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># head -n 1 /etc/issue</span></span><br><span class="line">CentOS release 6.5 (Final)</span><br></pre></td></tr></table></figure><ul><li>软件版本</li></ul><p>cmake-3.3.0-rc3.tar.gz<br>mysql-5.5.48.tar.gz</p><ul><li>安装编译代码需要环境</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y groupinstall <span class="string">"Development Tools"</span></span><br><span class="line"> yum install -y ncurses ncurses-devel</span><br></pre></td></tr></table></figure><hr><h2 id="二-安装Cmake"><a href="#二-安装Cmake" class="headerlink" title="二.安装Cmake"></a>二.安装Cmake</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar xvf cmake-3.3.0-rc3.tar.gz</span></span><br><span class="line"><span class="comment"># cd cmake-3.3.0-rc3</span></span><br><span class="line">根据里面的README.rst文件，运行</span><br><span class="line"><span class="comment"># ./bootstrap</span></span><br><span class="line">没有error则</span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><hr><h2 id="三-编译MySQL5-5使用参数解释"><a href="#三-编译MySQL5-5使用参数解释" class="headerlink" title="三.编译MySQL5.5使用参数解释"></a>三.编译MySQL5.5使用参数解释</h2><table><thead><tr><th align="left">cmake配置选项</th><th align="center">作用</th></tr></thead><tbody><tr><td align="left">-DCMAKE_INSTALL_PREFIX</td><td align="center">指定安装根目录</td></tr><tr><td align="left">-DMYSQL_DATADIR</td><td align="center">指定数据存储目录</td></tr><tr><td align="left">-DSYSCONFDIR</td><td align="center">配置文件(my.cnf)目录</td></tr><tr><td align="left">-DWITH_MYISAM_STORAGE_ENGINE</td><td align="center">启用MYISAM引擎支持</td></tr><tr><td align="left">-DWITH_INNOBASE_STORAGE_ENGINE=1</td><td align="center">启用InnoDB引擎支持</td></tr><tr><td align="left">-DWITH_MEMORY_STORAGE_ENGINE=1</td><td align="center">启用MEMORY引擎支持</td></tr><tr><td align="left">-DWITH_READLINE</td><td align="center">绑定readline的终端快捷键及历史记录功能，在mysql5.6已移除</td></tr><tr><td align="left">-DMYSQL_UNIX_ADDR</td><td align="center">UNIX套接字文件路径。必须是绝对路径名</td></tr><tr><td align="left">-DMYSQL_TCP_PORT</td><td align="center">指定TCP端口</td></tr><tr><td align="left">-DENABLED_LOCAL_INFILE</td><td align="center">是否启用对负荷数据文件在客户端库地方能力</td></tr></tbody></table><p><strong>可参考：</strong><br><a href="http://dev.mysql.com/doc/refman/5.5/en/source-configuration-options.html" target="_blank" rel="noopener">mysql5.6使用cmake配置选项官方介绍</a><br><a href="https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html" target="_blank" rel="noopener">mysql5.7使用cmake配置选项官方介绍</a></p><hr><h2 id="四-编译安装MySQL5-5"><a href="#四-编译安装MySQL5-5" class="headerlink" title="四.编译安装MySQL5.5"></a>四.编译安装MySQL5.5</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar xvf mysql-5.5.48.tar.gz -C /usr/local/</span></span><br><span class="line"><span class="comment"># cd /usr/local/</span></span><br><span class="line">创建一个硬连接，主要是可以查看mysql的版本号。</span><br><span class="line"><span class="comment"># ln -sv mysql-5.5.48 mysql</span></span><br><span class="line"><span class="comment"># cd mysql</span></span><br><span class="line">查看各个文件的权限和属主属组</span><br><span class="line"><span class="comment"># ll </span></span><br><span class="line">total 648</span><br><span class="line">drwxr-xr-x.  2 7161 wheel   4096 Jan 14 21:47 BUILD</span><br><span class="line">-rw-r--r--.  1 7161 wheel   8528 Jan 14 21:38 BUILD-CMAKE</span><br><span class="line">drwxr-xr-x.  2 7161 wheel   4096 Jan 14 21:47 client</span><br><span class="line">drwxr-xr-x.  4 7161 wheel   4096 Jan 14 21:47 cmake</span><br><span class="line">-rw-r--r--.  1 7161 wheel  19216 Jan 14 21:38 CMakeLists.txt</span><br><span class="line">drwxr-xr-x.  4 7161 wheel   4096 Jan 14 21:47 cmd-line-utils</span><br><span class="line">-rw-r--r--.  1 7161 wheel  18583 Jan 14 21:38 config.h.cmake</span><br><span class="line">-rw-r--r--.  1 7161 wheel  33523 Jan 14 21:38 configure.cmake</span><br><span class="line">drwxr-xr-x.  3 7161 wheel   4096 Jan 14 21:47 extra</span><br><span class="line">drwxr-xr-x.  4 7161 wheel   4096 Jan 14 21:47 include</span><br><span class="line">-rw-r--r--.  1 7161 wheel 412459 Jan 14 21:47 INSTALL-SOURCE</span><br><span class="line">-rw-r--r--.  1 7161 wheel    247 Jan 14 21:38 INSTALL-WIN-SOURCE</span><br><span class="line">drwxr-xr-x.  3 7161 wheel   4096 Jan 14 21:47 libmysql</span><br><span class="line">drwxr-xr-x.  3 7161 wheel   4096 Jan 14 21:47 libmysqld</span><br><span class="line">drwxr-xr-x.  2 7161 wheel   4096 Jan 14 21:47 libservices</span><br><span class="line">drwxr-xr-x.  2 7161 wheel   4096 Jan 14 21:47 man</span><br><span class="line">drwxr-xr-x.  5 7161 wheel   4096 Jan 14 21:47 support-files</span><br><span class="line">-rw-r--r--.  1 7161 wheel     88 Jan 14 21:38 VERSION</span><br><span class="line">....</span><br><span class="line">查看README和INSTALL-SOURCE,了解安装信息,如下：</span><br><span class="line">shell&gt; yum search libaio  <span class="comment"># search for info</span></span><br><span class="line">shell&gt; yum install libaio <span class="comment"># install library</span></span><br><span class="line">shell&gt; groupadd mysql</span><br><span class="line">shell&gt; useradd -r -g mysql -s /bin/<span class="literal">false</span> mysql</span><br><span class="line">shell&gt; <span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">shell&gt; tar zxvf /path/to/mysql-VERSION-OS.tar.gz</span><br><span class="line">shell&gt; ln -s full-path-to-mysql-VERSION-OS mysql</span><br><span class="line">shell&gt; <span class="built_in">cd</span> mysql</span><br><span class="line">shell&gt; chown -R mysql .</span><br><span class="line">shell&gt; chgrp -R mysql .</span><br><span class="line">shell&gt; scripts/mysql_install_db --user=mysql</span><br><span class="line">shell&gt; chown -R root .</span><br><span class="line">shell&gt; chown -R mysql data</span><br><span class="line"><span class="comment"># Next command is optional</span></span><br><span class="line">shell&gt; cp support-files/my-medium.cnf /etc/my.cnf</span><br><span class="line">shell&gt; bin/mysqld_safe --user=mysql &amp;</span><br><span class="line"><span class="comment"># Next command is optional</span></span><br><span class="line">shell&gt; cp support-files/mysql.server /etc/init.d/mysql.server</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h5 id="上面的安装步骤是建立在已编译好的程序上的。那么，现在我们也开始准备编译mysql源码："><a href="#上面的安装步骤是建立在已编译好的程序上的。那么，现在我们也开始准备编译mysql源码：" class="headerlink" title="上面的安装步骤是建立在已编译好的程序上的。那么，现在我们也开始准备编译mysql源码："></a>上面的安装步骤是建立在已编译好的程序上的。那么，现在我们也开始准备编译mysql源码：</h5><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install libaio</span></span><br><span class="line"><span class="comment"># groupadd mysql</span></span><br><span class="line"><span class="comment"># useradd -r -g mysql -s /bin/false mysql</span></span><br><span class="line"><span class="comment"># cd /usr/local/mysql</span></span><br><span class="line"><span class="comment"># chown -R mysql.mysql .</span></span><br><span class="line"><span class="comment"># mkdir /data</span></span><br><span class="line"><span class="comment"># chown -R mysql /data</span></span><br><span class="line"><span class="comment"># chmod u+x scripts/*</span></span><br><span class="line"></span><br><span class="line">用cmake编译</span><br><span class="line"><span class="comment"># cmake . \</span></span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span>/mysql \</span><br><span class="line">-DMYSQL_DATADIR=/data \</span><br><span class="line">-DSYSCONFDIR=/etc \</span><br><span class="line">-DWITH_MYISAM_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_MEMORY_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_READLINE=1 \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/var/lib/mysql/mysql.sock \</span><br><span class="line">-DMYSQL_TCP_PORT=3306 \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_PARTITION_STORAGE_ENGINE=1 \</span><br><span class="line">-DEXTRA_CHARSETS=all \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci</span><br><span class="line"></span><br><span class="line">如果想清理此前的编译所生成的文件，则需要使用如下命令：</span><br><span class="line">make clean</span><br><span class="line">rm CMakeCache.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br><span class="line">使用<span class="comment"># scripts/mysql_install_db --help 查看初始化mysql的帮助信息</span></span><br><span class="line"><span class="comment"># scripts/mysql_install_db --basedir=/usr/local/mysql --datadir=/data --user=mysql</span></span><br><span class="line"><span class="comment"># chown -R root /usr/local/mysql/*</span></span><br><span class="line"><span class="comment"># cp support-files/mysql.server /etc/init.d/mysqld</span></span><br><span class="line">查看mysqld有没有执行权限，如没有，则：</span><br><span class="line"> <span class="comment"># chmod +x /etc/init.d/mysqld</span></span><br><span class="line"> 然后继续添加服务自启：</span><br><span class="line"> <span class="comment"># chkconfig --add mysqld</span></span><br><span class="line"> <span class="comment"># chkconfig --list mysqld</span></span><br></pre></td></tr></table></figure><p><strong>TIPS：</strong> mysql查找配置文件的位置，按照如下的顺序查找。</p><p>/etc/my.cnf –&gt;/etc/mysql/my.cnf –&gt;$BASEDIR/my.cnf（安装目录） –&gt;~/.my.cnf(家目录)<br>一一查询完后，以最后一个为准。<br>根据自己主机的资源，配置选择my.cnf。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp support-files/my-large.cnf /etc/my.cnf</span></span><br><span class="line">在/etc/my.cnf的[mysqld]中添加datadir = /data</span><br></pre></td></tr></table></figure><hr><h2 id="五-将mysql的安装目录的bin加入PATH："><a href="#五-将mysql的安装目录的bin加入PATH：" class="headerlink" title="五.将mysql的安装目录的bin加入PATH："></a>五.将mysql的安装目录的bin加入PATH：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">将</span><br><span class="line">PATH=<span class="variable">$PATH</span>：/usr/<span class="built_in">local</span>/mysql/bin</span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line">这两行加入到/etc/profile的末尾，注意不要在等号的左右加空格，不然会报错。</span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure><h2 id="六-输出mysql的man手册至man命令的查找路径："><a href="#六-输出mysql的man手册至man命令的查找路径：" class="headerlink" title="六.输出mysql的man手册至man命令的查找路径："></a>六.输出mysql的man手册至man命令的查找路径：</h2><p>如果你使用的是最小系统安装，则没有安装man手册，执行如下命令安装man手册：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y man-pages man-pages-overrides</span><br><span class="line">cp /etc/man.config.rpmnew /etc/man.config</span><br></pre></td></tr></table></figure><p>编辑/etc/man.config，添加如下行即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MANPATH  /usr/<span class="built_in">local</span>/mysql/man</span><br></pre></td></tr></table></figure><h2 id="七-输出mysql的头文件至系统头文件路径-usr-include："><a href="#七-输出mysql的头文件至系统头文件路径-usr-include：" class="headerlink" title="七.输出mysql的头文件至系统头文件路径/usr/include："></a>七.输出mysql的头文件至系统头文件路径/usr/include：</h2><p>这可以通过简单的创建链接实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ln -sv /usr/local/mysql/include  /usr/include/mysql</span></span><br></pre></td></tr></table></figure><h2 id="八-输出mysql的库文件给系统库查找路径："><a href="#八-输出mysql的库文件给系统库查找路径：" class="headerlink" title="八.输出mysql的库文件给系统库查找路径："></a>八.输出mysql的库文件给系统库查找路径：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo '/usr/local/mysql/lib' &gt; /etc/ld.so.conf.d/mysql.conf</span></span><br><span class="line">而后让系统重新载入系统库：</span><br><span class="line"><span class="comment"># ldconfig -v</span></span><br></pre></td></tr></table></figure><p><strong>到此结束。动手做一做吧！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
