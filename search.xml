<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>详细讲解U盘制作启动盘安装Linux</title>
      <link href="/2020/07/16/U-disk-install-linux/"/>
      <url>/2020/07/16/U-disk-install-linux/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>制作启动盘的方法有很多，现介绍下面一款软件的使用过程。</p><a id="more"></a><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>下载类似老毛桃的工具。linux安装老毛桃等PE软件不适用。下面我使用的是rufus，很轻量的一款启动盘制作工具，可以制作引导linux和windows等镜像。</p><p>下载路径如下：    </p><p><a href="http://rufus.akeo.ie/downloads/" target="_blank" rel="noopener">http://rufus.akeo.ie/downloads/</a></p><h2 id="运行界面"><a href="#运行界面" class="headerlink" title="运行界面"></a>运行界面</h2><p>在windows上点击运行rufus-2.17.exe。界面如下：</p><p><img src="u-disk1.png" alt="rufus界面"></p><h2 id="制作步骤"><a href="#制作步骤" class="headerlink" title="制作步骤"></a>制作步骤</h2><ol><li>选择要制作启动盘的U盘设备，分区方案可选MBR分区和GPT方案，一般默认即可。</li><li>选择文件系统FAT32、NTFS等文件系统，选择合适的即可，默认FAT32。</li><li>填写新U盘的名字（卷标）。</li><li>勾选格式化选项，第2-3项需要勾选，可直接默认。在创建启动盘后面，选择”iso”镜像，点击类光驱的图标，选中需要制作启动盘的linux iso镜像，如果想使用windows可以选择MS-IOS镜像，应该没有PE功能强大，还未使用过。</li><li>点击开始，等待格式化及写入完成即可。</li></ol><p><img src="u-disk2.png" alt="rufus界面"></p><p>到此结束！</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>来写写如何手动迁移hbase的数据</title>
      <link href="/2020/07/16/migrating-hbase-data/"/>
      <url>/2020/07/16/migrating-hbase-data/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>hbase数据迁移有多种方式，有静态的动态的，网上一堆。下面我说说上周实际使用import和export方式的过程。 </p><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>HDFS是hadoop的分布式文件系统，hbase的数据存放在该文件系统内，”/“是相对的根目录。</p><p>hadoop对HDFS在命令行下可以做一些常用的操作，如cat、ls、mkdir、rm等，命令格式如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;bin/hadoop fs &lt;args&gt;</span><br></pre></td></tr></table></figure><p>对于本文档，需要了解几个hadoop的命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;bin/hadoop fs -mkdir   <span class="comment">#新建文件夹</span></span><br><span class="line">shell&gt;bin/hadoop fs -copyToLocal <span class="comment">#将HDFS里的文件复制到本地文件系统</span></span><br><span class="line">shell&gt;bin/hadoop fs -copyFromLocal </span><br><span class="line">shell&gt;bin/</span><br></pre></td></tr></table></figure><p>对于hbase数据的导出，我们需要了解下hbase提供的导入导出的工具。org.apache.hadoop.hbase.mapreduce.Driver 是hadoop jar的一个驱动类，给我提供了导入，导出，复制部分或全部表，计算表行数等功能。我们需要使用如下两个hbase shell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">shell&gt; bin/hbase org.apache.hadoop.hbase.mapreduce.Export &lt;tablename&gt; &lt;outputdir&gt; </span><br><span class="line">shell&gt; bin/hbase org.apache.hadoop.hbase.mapreduce.Import &lt;tablename&gt; &lt;inputdir&gt;</span><br></pre></td></tr></table></figure><p>流程开始：</p><h2 id="源集群"><a href="#源集群" class="headerlink" title="源集群"></a>源集群</h2><p>在<strong>源</strong>集群master上，执行如下操作：</p><h3 id="首先检查hbase是否正常jps；如图"><a href="#首先检查hbase是否正常jps；如图" class="headerlink" title="首先检查hbase是否正常jps；如图"></a>首先检查hbase是否正常jps；如图</h3><p><img src="hbase1.png" alt="状态"></p><h3 id="关闭公司产品服务，使hbase的数据在迁移的过程中不被操作。"><a href="#关闭公司产品服务，使hbase的数据在迁移的过程中不被操作。" class="headerlink" title="关闭公司产品服务，使hbase的数据在迁移的过程中不被操作。"></a>关闭公司产品服务，使hbase的数据在迁移的过程中不被操作。</h3><h3 id="在HDFS上新过渡的数据存放路径"><a href="#在HDFS上新过渡的数据存放路径" class="headerlink" title="在HDFS上新过渡的数据存放路径"></a>在HDFS上新过渡的数据存放路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;bin/hadoop fs -mkdir /db/</span><br></pre></td></tr></table></figure><h3 id="导出hbase表到过渡路径，indval20170116为文件名。"><a href="#导出hbase表到过渡路径，indval20170116为文件名。" class="headerlink" title="导出hbase表到过渡路径，indval20170116为文件名。"></a>导出hbase表到过渡路径，indval20170116为文件名。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;hbase org.apache.hadoop.hbase.mapreduce.Driver <span class="built_in">export</span> INDICATOR_VALUE /db/indval20170116</span><br></pre></td></tr></table></figure><h3 id="复制数据到操作系统本地文件系统"><a href="#复制数据到操作系统本地文件系统" class="headerlink" title="复制数据到操作系统本地文件系统"></a>复制数据到操作系统本地文件系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;hadoop fs -copyToLocal /db/indval20170116 /home/tocc/indval20170116</span><br><span class="line">ps：如数据量过大，可做如下打包压缩命令</span><br><span class="line">tar cvf - /home/XXX/indval20170116 | gzip &gt; indval20170116.tar.gz</span><br></pre></td></tr></table></figure><h3 id="传数据到目标集群的机器上。可利用sftp，scp。"><a href="#传数据到目标集群的机器上。可利用sftp，scp。" class="headerlink" title="传数据到目标集群的机器上。可利用sftp，scp。"></a>传数据到目标集群的机器上。可利用sftp，scp。</h3><h2 id="目标集群"><a href="#目标集群" class="headerlink" title="目标集群"></a>目标集群</h2><p>在目标集群master上，执行如下操作：</p><h3 id="如使用压缩命令，则解压缩"><a href="#如使用压缩命令，则解压缩" class="headerlink" title="如使用压缩命令，则解压缩"></a>如使用压缩命令，则解压缩</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf indval20170116.tar.gz</span><br></pre></td></tr></table></figure><h3 id="建立数据过渡路径"><a href="#建立数据过渡路径" class="headerlink" title="建立数据过渡路径"></a>建立数据过渡路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;bin/hadoop fs -mkdir /db/</span><br></pre></td></tr></table></figure><h3 id="将数据文件导入到HDFS"><a href="#将数据文件导入到HDFS" class="headerlink" title="将数据文件导入到HDFS"></a>将数据文件导入到HDFS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -copyFromLocal /home/XXXX/indval20170116  /db/indval20170116</span><br></pre></td></tr></table></figure><h3 id="建立hbase数据表"><a href="#建立hbase数据表" class="headerlink" title="建立hbase数据表"></a>建立hbase数据表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;hbase shell</span><br><span class="line"> &gt; create <span class="string">'INDICATOR_VALUE'</span>,&#123;NAME =&gt; <span class="string">'F1'</span>, VERSIONS =&gt; <span class="string">'10'</span>&#125; <span class="comment">#创建hbase表</span></span><br><span class="line"> &gt; list <span class="comment">#验证表已建好</span></span><br></pre></td></tr></table></figure><h3 id="将数据文件导入表"><a href="#将数据文件导入表" class="headerlink" title="将数据文件导入表"></a>将数据文件导入表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell&gt;hbase org.apache.hadoop.hbase.mapreduce.Driver import INDICATOR_VALUE /db/indval20170116</span><br></pre></td></tr></table></figure><h3 id="最后到hbase-shell里面验证下数据数据是否导入成功。"><a href="#最后到hbase-shell里面验证下数据数据是否导入成功。" class="headerlink" title="最后到hbase shell里面验证下数据数据是否导入成功。"></a>最后到hbase shell里面验证下数据数据是否导入成功。</h3><p><img src="hbase2.png" alt="导入"></p><p>统计habse行数：<br><img src="hbase3.png" alt="行数"></p><p>到此，数据迁移完成，查看指标数据是否正常。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hbase </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用brew安装指定版本node</title>
      <link href="/2020/07/16/brew-node-choose-version/"/>
      <url>/2020/07/16/brew-node-choose-version/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong> 手贱升级brew update， 导致node升级到14版本，hexo的node使用时总是报错，所以需要退回到node@10版本</p><a id="more"></a><h2 id="查询支持的node版本"><a href="#查询支持的node版本" class="headerlink" title="查询支持的node版本"></a>查询支持的node版本</h2><p>使用brew search命令查询版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  brew search node__</span><br><span class="line">==&gt; Formulae</span><br><span class="line">libbitcoin-node       node ✔                node-sass             node@12               nodebrew              nodenv</span><br><span class="line">llnode                node-build            node@10              node_exporter         nodeenv</span><br><span class="line">==&gt; Casks</span><br><span class="line">font-ubuntu-mono-derivative-powerline        nodebox                                      nodeclipse</span><br><span class="line"></span><br><span class="line">If you meant <span class="string">"node"</span> specifically:</span><br><span class="line">It was migrated from homebrew/cask to homebrew/core.</span><br></pre></td></tr></table></figure><p> 可以看到node@10，选择改版本</p><h2 id="安装node-10"><a href="#安装node-10" class="headerlink" title="安装node@10"></a>安装node@10</h2><p>使用 brew install 安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> ➜ brew install node@10</span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Downloading https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/bottles/node%4010-10.21.0.catalina.bottle.tar.gz</span><br><span class="line">Already downloaded: /Users/bellpost/Library/Caches/Homebrew/downloads/2e9beb948fb8164bda6f4bb80e76c6c0c709ba114486f6825bb0cdd9f847ec0c--node@10-10.21.0.catalina.bottle.tar.gz</span><br><span class="line">==&gt; Pouring node@10-10.21.0.catalina.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">node@10 is keg-only, <span class="built_in">which</span> means it was not symlinked into /usr/<span class="built_in">local</span>,</span><br><span class="line">because this is an alternate version of another formula.</span><br><span class="line"></span><br><span class="line">If you need to have node@10 first <span class="keyword">in</span> your PATH run:</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">'export PATH="/usr/local/opt/node@10/bin:$PATH"'</span> &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">For compilers to find node@10 you may need to <span class="built_in">set</span>:</span><br><span class="line">  <span class="built_in">export</span> LDFLAGS=<span class="string">"-L/usr/local/opt/node@10/lib"</span></span><br><span class="line">  <span class="built_in">export</span> CPPFLAGS=<span class="string">"-I/usr/local/opt/node@10/include"</span></span><br></pre></td></tr></table></figure><h2 id="将node-10链接为默认版本"><a href="#将node-10链接为默认版本" class="headerlink" title="将node@10链接为默认版本"></a>将node@10链接为默认版本</h2><p>使用命令brew link，然后根据提示执行，写入默认环境中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH="/usr/local/opt/node@10/bin:$PATH"'</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜brew link node@10</span><br><span class="line">Warning: node@10 is keg-only and must be linked with --force</span><br><span class="line"></span><br><span class="line">If you need to have this software first <span class="keyword">in</span> your PATH instead consider running:</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">'export PATH="/usr/local/opt/node@10/bin:$PATH"'</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><p>这样就可以啦，输入node -v 看下当前版本号吧！</p>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>squid实现突破内网上网</title>
      <link href="/2020/07/16/use-squid-break-through-the-internet/"/>
      <url>/2020/07/16/use-squid-break-through-the-internet/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>实现代理上网的前提：在局域网内有一台可以访问外网的机器，并可以在上面部署squid程序。</p><a id="more"></a><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>在反向代理的领域，squid的市场份额，虽然不断被nginx，apache等新兴的软件占领，并且nginx也提供了缓存功能。但是依然不可掩盖squid的老牌实力。</p><p>下面简要介绍下squid的功能及配置。</p><ul><li>缓存的目录一般在/var/spool/squid，日志目录在/var/log/squid。</li><li>每通过代理访问一次都可以查看日志目录下面的access.log文件，查看访问记录。</li><li>可在配置文件中的其他设置<ul><li>http_port [IP:]3128 可添加IP或改变端口</li><li>cache_mem 128 MB 可设置squid使用的做缓存的内存大小</li><li>visible_hostname - 可以在状态/错误信息中看到的 hostname</li><li>cache_dir - 指定缓存文件夹</li></ul></li></ul><p>squid还支持acl列表访问控制，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">acl ip_acl src 192.168.1.0&#x2F;24</span><br><span class="line">http_access allow ip_acl</span><br><span class="line">http_access deny all</span><br></pre></td></tr></table></figure><p>第一行，acl定义列表，ip_acl是任意指定的列表名称，src表示源IP<br>第二行，允许ip_acl的acl列表里的ip网段内的ip访问<br>第三行，拒绝所有http访问，除了被允许的ip网段。</p><p>   突破内网使用squid实现正向代理即可。步骤简单。如下：<br>   在开始之前，使用ping命令保证各机器能连通，保证数据不被防火墙过滤。可关闭防火墙。不然到后面会失败。</p><h3 id="安装squid软件"><a href="#安装squid软件" class="headerlink" title="安装squid软件"></a>安装squid软件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># yum install -y squid</span></span><br></pre></td></tr></table></figure><h3 id="修改squid配置"><a href="#修改squid配置" class="headerlink" title="修改squid配置"></a>修改squid配置</h3><p>配置文件位于 /etc/squid/squid.conf<br>修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/squid/squid.conf</span><br></pre></td></tr></table></figure><p>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># And finally deny all other access to this proxy</span></span><br><span class="line">http_access deny all</span><br><span class="line">为</span><br><span class="line"><span class="comment"># And finally deny all other access to this proxy</span></span><br><span class="line">http_access  allow all</span><br></pre></td></tr></table></figure><h3 id="检查配置文件并初始化缓存目录"><a href="#检查配置文件并初始化缓存目录" class="headerlink" title="检查配置文件并初始化缓存目录"></a>检查配置文件并初始化缓存目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># squid -k check</span></span><br><span class="line">[root@Workbench ~]<span class="comment"># squid -z</span></span><br></pre></td></tr></table></figure><p>启动squid在后台运行。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/local/squid/sbin/squid -s</span></span><br></pre></td></tr></table></figure><p>停止 squid </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/local/squid/sbin/squid -k shutdown</span></span><br></pre></td></tr></table></figure><h3 id="重启该服务并验证"><a href="#重启该服务并验证" class="headerlink" title="重启该服务并验证"></a>重启该服务并验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># service squid restart</span></span><br><span class="line">[root@Workbench ~]<span class="comment"># netstat -nltp |grep 3128</span></span><br></pre></td></tr></table></figure><h3 id="在不能访问内网的机器上执行"><a href="#在不能访问内网的机器上执行" class="headerlink" title="在不能访问内网的机器上执行"></a>在不能访问内网的机器上执行</h3><p>临时使用代理，重启失效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># export http_proxy=http://[Squid Server IP]:3128</span></span><br></pre></td></tr></table></figure><p>永久使用则在/etc/profile末尾加入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=http://[Squid Server IP]:3128</span><br></pre></td></tr></table></figure><p>然后 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure><p>验证http代理开启成功,若成功使用以下命令会在当前目录下，下载一个index.html文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Workbench ~]<span class="comment"># wget www.baidu.com</span></span><br></pre></td></tr></table></figure><p>ps：若需要访问内网的机器需要用ftp，https等协议访问外网。则增加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> https_proxy=[Squid Server IP]:3128</span><br><span class="line"><span class="built_in">export</span> ftp_proxy=[Squid Server IP]:3128</span><br></pre></td></tr></table></figure><p>现在我们就可以用yum去安装软件或者用浏览器上网了，但是如果使用ping命令去ping百度是不通的。为什么呢？</p><p>由于ping命令使用的是ICMP协议是属于网络层的协议，不能通过第七层应用层的代理，并且ping使用的协议不是http或是ftp协议。</p><p>如果是windows主机，可以在浏览器的internet选项–&gt;连接–&gt;局域网设置中配置代理服务器。</p><p> <img src="use-squid.jpeg" alt="局域网设置"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>牛奶品质探讨</title>
      <link href="/2020/07/16/milk-quality/"/>
      <url>/2020/07/16/milk-quality/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong>在推上看到有人讨论喝国内牛奶腹泻，喝国外牛奶从不腹泻，引起了我的好奇心，难道加工工艺有很大差别吗？还是奶质的差别？还是制度约束不够呢？这些问题我也无从回答，只是搜集相关资料整理。</p><a id="more"></a><h2 id="关于工艺"><a href="#关于工艺" class="headerlink" title="关于工艺"></a>关于工艺</h2><p>牛奶保质的工艺大致分为三种 <strong>超高温消毒法(UHT)、保久乳及巴氏消毒法</strong>  ，按现有的技术手段，技术实现的难度不大，特别是国内如此大的市场，按理来说，不存在缺资金使工艺不到位的情况。</p><p>工艺的优缺点一览：</p><table><thead><tr><th align="left">工艺</th><th align="center">消毒温度</th><th align="center">保质期</th><th align="center">营养价值</th><th align="center">价格</th><th align="right">微生物</th><th align="right">消化</th></tr></thead><tbody><tr><td align="left">超高温消毒法</td><td align="center">135~150°C</td><td align="center">室温保存半年以上</td><td align="center">低</td><td align="center">便宜</td><td align="right">无</td><td align="right">好</td></tr><tr><td align="left">保久乳</td><td align="center">128°C</td><td align="center">1-3月左右</td><td align="center">中等</td><td align="center">中等</td><td align="right">少量</td><td align="right">中等</td></tr><tr><td align="left">巴氏消毒法</td><td align="center">72-75°C</td><td align="center">室温1-2日冷藏6-10日</td><td align="center">高</td><td align="center">贵</td><td align="right">部分</td><td align="right">难</td></tr></tbody></table><h2 id="关于制度"><a href="#关于制度" class="headerlink" title="关于制度"></a>关于制度</h2><p>  牛奶质量问题一直是国内消费者担忧的关键，牛奶的安全事件一直不能在根本上消除，所以制度不完善，监督不到位，应该还是突出问题。</p><h2 id="关于奶质"><a href="#关于奶质" class="headerlink" title="关于奶质"></a>关于奶质</h2><p>   这个更是无从说起，喝牛奶最重要的是补充蛋白质。在蛋白质的含量上不同奶源可能不同，但这不是构成微生物不达标的因素。</p><h2 id="渠道问题"><a href="#渠道问题" class="headerlink" title="渠道问题"></a>渠道问题</h2><p>   商品流通跟渠道的关系重大，特别是奶制品，保质期时间短，存放环境要求高，不同公司对于监督渠道保存奶品的环境不够有力，也是牛奶问题的关键因素。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p> 对于消费者，我们不可避免的要购买奶制品，如何才能喝到最好品质的牛奶呢？</p><ul><li>购买生产日期最近的奶制品，时间越长，微生物增加，乳酸过多使牛奶变酸</li><li>观察存放奶制品的环境是否是低温环境</li></ul>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> milk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew镜像源替换及还原</title>
      <link href="/2020/07/16/homebrew-source-replace-and-restore/"/>
      <url>/2020/07/16/homebrew-source-replace-and-restore/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong> Homebrew以前使用阿里云镜像源一直体验不佳，比较多的包请求不到，需要编译，十分慢及耗资源，所以换成清华大学镜像源,在此记录下。</p><a id="more"></a><h2 id="Homebrew镜像源替换"><a href="#Homebrew镜像源替换" class="headerlink" title="Homebrew镜像源替换"></a>Homebrew镜像源替换</h2><ul><li>替换清华大学镜像源<br> 将下面代码全部执行即可，下同</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> brew 程序本身，Homebrew相同</span></span><br><span class="line">git -C "$(brew --repo)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以下针对 mac OS 系统上的 Homebrew</span></span><br><span class="line">git -C "$(brew --repo homebrew/core)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask-fonts)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask-fonts.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask-drivers)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask-drivers.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更换后测试工作是否正常</span></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><ul><li>替换阿里云镜像源</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 替换brew.git:</span></span><br><span class="line">git -C  "$(brew --repo)"  remote set-url origin https://mirrors.aliyun.com/homebrew/brew.git</span><br><span class="line"><span class="meta">#</span><span class="bash"> 替换homebrew-core.git:</span></span><br><span class="line">git git -C "$(brew --repo homebrew/core)" remote set-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git</span><br></pre></td></tr></table></figure><p>执行时出现如下错误，是没有安装相关homebrew的cask-fonts及cask-drivers组件，不影响homebrew正常使用，如果你想安装，则查看下面的解决办法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fatal: cannot change to '/usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask-fonts': No such file or directory</span><br><span class="line">fatal: cannot change to '/usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask-drivers': No such file or directory</span><br></pre></td></tr></table></figure><p><strong>解决办法</strong>:  安装相关组件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap homebrew/cask-fonts</span><br><span class="line">brew tap homebrew/cask-drivers</span><br></pre></td></tr></table></figure><h2 id="Homebrew还原镜像源"><a href="#Homebrew还原镜像源" class="headerlink" title="Homebrew还原镜像源"></a>Homebrew还原镜像源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> brew 程序本身，Homebrew/Linuxbrew 相同</span></span><br><span class="line">git -C "$(brew --repo)" remote set-url origin https://github.com/Homebrew/brew.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以下针对 mac OS 系统上的 Homebrew</span></span><br><span class="line">git -C "$(brew --repo homebrew/core)" remote set-url origin https://github.com/Homebrew/homebrew-core.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask)" remote set-url origin https://github.com/Homebrew/homebrew-cask.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask-fonts)" remote set-url origin https://github.com/Homebrew/homebrew-cask-fonts.git</span><br><span class="line">git -C "$(brew --repo homebrew/cask-drivers)" remote set-url origin https://github.com/Homebrew/homebrew-cask-drivers.git</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更换后测试工作是否正常</span></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure><h2 id="Homebrew-bottles-镜像替换"><a href="#Homebrew-bottles-镜像替换" class="headerlink" title="Homebrew-bottles 镜像替换"></a>Homebrew-bottles 镜像替换</h2><ul><li>临时替换</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles</span><br></pre></td></tr></table></figure><ul><li>长期替换（bash）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles' &gt;&gt; ~/.bash_profile</span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><ul><li>长期替换（zsh）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles' &gt;&gt; ~/.zshrc</span><br><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/" target="_blank" rel="noopener">清华Homebrew镜像使用帮助</a></p><p><a href="https://developer.aliyun.com/mirror/homebrew" target="_blank" rel="noopener">阿里Homebrew镜像使用帮助</a></p>]]></content>
      
      
      <categories>
          
          <category> macOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL5.5编译安装</title>
      <link href="/2020/07/15/mysql-build-install/"/>
      <url>/2020/07/15/mysql-build-install/</url>
      
        <content type="html"><![CDATA[<p><strong>导语：</strong> 一篇老的blog，写的不好，勿怪。</p><a id="more"></a><h2 id="一-安装环境"><a href="#一-安装环境" class="headerlink" title="一.安装环境"></a>一.安装环境</h2><ul><li>系统版本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># head -n 1 /etc/issue</span></span><br><span class="line">CentOS release 6.5 (Final)</span><br></pre></td></tr></table></figure><ul><li>软件版本</li></ul><p>cmake-3.3.0-rc3.tar.gz<br>mysql-5.5.48.tar.gz</p><ul><li>安装编译代码需要环境</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y groupinstall <span class="string">"Development Tools"</span></span><br><span class="line"> yum install -y ncurses ncurses-devel</span><br></pre></td></tr></table></figure><hr><h2 id="二-安装Cmake"><a href="#二-安装Cmake" class="headerlink" title="二.安装Cmake"></a>二.安装Cmake</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar xvf cmake-3.3.0-rc3.tar.gz</span></span><br><span class="line"><span class="comment"># cd cmake-3.3.0-rc3</span></span><br><span class="line">根据里面的README.rst文件，运行</span><br><span class="line"><span class="comment"># ./bootstrap</span></span><br><span class="line">没有error则</span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure><hr><h2 id="三-编译MySQL5-5使用参数解释"><a href="#三-编译MySQL5-5使用参数解释" class="headerlink" title="三.编译MySQL5.5使用参数解释"></a>三.编译MySQL5.5使用参数解释</h2><table><thead><tr><th align="left">cmake配置选项</th><th align="center">作用</th></tr></thead><tbody><tr><td align="left">-DCMAKE_INSTALL_PREFIX</td><td align="center">指定安装根目录</td></tr><tr><td align="left">-DMYSQL_DATADIR</td><td align="center">指定数据存储目录</td></tr><tr><td align="left">-DSYSCONFDIR</td><td align="center">配置文件(my.cnf)目录</td></tr><tr><td align="left">-DWITH_MYISAM_STORAGE_ENGINE</td><td align="center">启用MYISAM引擎支持</td></tr><tr><td align="left">-DWITH_INNOBASE_STORAGE_ENGINE=1</td><td align="center">启用InnoDB引擎支持</td></tr><tr><td align="left">-DWITH_MEMORY_STORAGE_ENGINE=1</td><td align="center">启用MEMORY引擎支持</td></tr><tr><td align="left">-DWITH_READLINE</td><td align="center">绑定readline的终端快捷键及历史记录功能，在mysql5.6已移除</td></tr><tr><td align="left">-DMYSQL_UNIX_ADDR</td><td align="center">UNIX套接字文件路径。必须是绝对路径名</td></tr><tr><td align="left">-DMYSQL_TCP_PORT</td><td align="center">指定TCP端口</td></tr><tr><td align="left">-DENABLED_LOCAL_INFILE</td><td align="center">是否启用对负荷数据文件在客户端库地方能力</td></tr></tbody></table><p><strong>可参考：</strong><br><a href="http://dev.mysql.com/doc/refman/5.5/en/source-configuration-options.html" target="_blank" rel="noopener">mysql5.6使用cmake配置选项官方介绍</a><br><a href="https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html" target="_blank" rel="noopener">mysql5.7使用cmake配置选项官方介绍</a></p><hr><h2 id="四-编译安装MySQL5-5"><a href="#四-编译安装MySQL5-5" class="headerlink" title="四.编译安装MySQL5.5"></a>四.编译安装MySQL5.5</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar xvf mysql-5.5.48.tar.gz -C /usr/local/</span></span><br><span class="line"><span class="comment"># cd /usr/local/</span></span><br><span class="line">创建一个硬连接，主要是可以查看mysql的版本号。</span><br><span class="line"><span class="comment"># ln -sv mysql-5.5.48 mysql</span></span><br><span class="line"><span class="comment"># cd mysql</span></span><br><span class="line">查看各个文件的权限和属主属组</span><br><span class="line"><span class="comment"># ll </span></span><br><span class="line">total 648</span><br><span class="line">drwxr-xr-x.  2 7161 wheel   4096 Jan 14 21:47 BUILD</span><br><span class="line">-rw-r--r--.  1 7161 wheel   8528 Jan 14 21:38 BUILD-CMAKE</span><br><span class="line">drwxr-xr-x.  2 7161 wheel   4096 Jan 14 21:47 client</span><br><span class="line">drwxr-xr-x.  4 7161 wheel   4096 Jan 14 21:47 cmake</span><br><span class="line">-rw-r--r--.  1 7161 wheel  19216 Jan 14 21:38 CMakeLists.txt</span><br><span class="line">drwxr-xr-x.  4 7161 wheel   4096 Jan 14 21:47 cmd-line-utils</span><br><span class="line">-rw-r--r--.  1 7161 wheel  18583 Jan 14 21:38 config.h.cmake</span><br><span class="line">-rw-r--r--.  1 7161 wheel  33523 Jan 14 21:38 configure.cmake</span><br><span class="line">drwxr-xr-x.  3 7161 wheel   4096 Jan 14 21:47 extra</span><br><span class="line">drwxr-xr-x.  4 7161 wheel   4096 Jan 14 21:47 include</span><br><span class="line">-rw-r--r--.  1 7161 wheel 412459 Jan 14 21:47 INSTALL-SOURCE</span><br><span class="line">-rw-r--r--.  1 7161 wheel    247 Jan 14 21:38 INSTALL-WIN-SOURCE</span><br><span class="line">drwxr-xr-x.  3 7161 wheel   4096 Jan 14 21:47 libmysql</span><br><span class="line">drwxr-xr-x.  3 7161 wheel   4096 Jan 14 21:47 libmysqld</span><br><span class="line">drwxr-xr-x.  2 7161 wheel   4096 Jan 14 21:47 libservices</span><br><span class="line">drwxr-xr-x.  2 7161 wheel   4096 Jan 14 21:47 man</span><br><span class="line">drwxr-xr-x.  5 7161 wheel   4096 Jan 14 21:47 support-files</span><br><span class="line">-rw-r--r--.  1 7161 wheel     88 Jan 14 21:38 VERSION</span><br><span class="line">....</span><br><span class="line">查看README和INSTALL-SOURCE,了解安装信息,如下：</span><br><span class="line">shell&gt; yum search libaio  <span class="comment"># search for info</span></span><br><span class="line">shell&gt; yum install libaio <span class="comment"># install library</span></span><br><span class="line">shell&gt; groupadd mysql</span><br><span class="line">shell&gt; useradd -r -g mysql -s /bin/<span class="literal">false</span> mysql</span><br><span class="line">shell&gt; <span class="built_in">cd</span> /usr/<span class="built_in">local</span></span><br><span class="line">shell&gt; tar zxvf /path/to/mysql-VERSION-OS.tar.gz</span><br><span class="line">shell&gt; ln -s full-path-to-mysql-VERSION-OS mysql</span><br><span class="line">shell&gt; <span class="built_in">cd</span> mysql</span><br><span class="line">shell&gt; chown -R mysql .</span><br><span class="line">shell&gt; chgrp -R mysql .</span><br><span class="line">shell&gt; scripts/mysql_install_db --user=mysql</span><br><span class="line">shell&gt; chown -R root .</span><br><span class="line">shell&gt; chown -R mysql data</span><br><span class="line"><span class="comment"># Next command is optional</span></span><br><span class="line">shell&gt; cp support-files/my-medium.cnf /etc/my.cnf</span><br><span class="line">shell&gt; bin/mysqld_safe --user=mysql &amp;</span><br><span class="line"><span class="comment"># Next command is optional</span></span><br><span class="line">shell&gt; cp support-files/mysql.server /etc/init.d/mysql.server</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h5 id="上面的安装步骤是建立在已编译好的程序上的。那么，现在我们也开始准备编译mysql源码："><a href="#上面的安装步骤是建立在已编译好的程序上的。那么，现在我们也开始准备编译mysql源码：" class="headerlink" title="上面的安装步骤是建立在已编译好的程序上的。那么，现在我们也开始准备编译mysql源码："></a>上面的安装步骤是建立在已编译好的程序上的。那么，现在我们也开始准备编译mysql源码：</h5><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install libaio</span></span><br><span class="line"><span class="comment"># groupadd mysql</span></span><br><span class="line"><span class="comment"># useradd -r -g mysql -s /bin/false mysql</span></span><br><span class="line"><span class="comment"># cd /usr/local/mysql</span></span><br><span class="line"><span class="comment"># chown -R mysql.mysql .</span></span><br><span class="line"><span class="comment"># mkdir /data</span></span><br><span class="line"><span class="comment"># chown -R mysql /data</span></span><br><span class="line"><span class="comment"># chmod u+x scripts/*</span></span><br><span class="line"></span><br><span class="line">用cmake编译</span><br><span class="line"><span class="comment"># cmake . \</span></span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span>/mysql \</span><br><span class="line">-DMYSQL_DATADIR=/data \</span><br><span class="line">-DSYSCONFDIR=/etc \</span><br><span class="line">-DWITH_MYISAM_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_MEMORY_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_READLINE=1 \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/var/lib/mysql/mysql.sock \</span><br><span class="line">-DMYSQL_TCP_PORT=3306 \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_PARTITION_STORAGE_ENGINE=1 \</span><br><span class="line">-DEXTRA_CHARSETS=all \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci</span><br><span class="line"></span><br><span class="line">如果想清理此前的编译所生成的文件，则需要使用如下命令：</span><br><span class="line">make clean</span><br><span class="line">rm CMakeCache.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># make &amp;&amp; make install</span></span><br><span class="line">使用<span class="comment"># scripts/mysql_install_db --help 查看初始化mysql的帮助信息</span></span><br><span class="line"><span class="comment"># scripts/mysql_install_db --basedir=/usr/local/mysql --datadir=/data --user=mysql</span></span><br><span class="line"><span class="comment"># chown -R root /usr/local/mysql/*</span></span><br><span class="line"><span class="comment"># cp support-files/mysql.server /etc/init.d/mysqld</span></span><br><span class="line">查看mysqld有没有执行权限，如没有，则：</span><br><span class="line"> <span class="comment"># chmod +x /etc/init.d/mysqld</span></span><br><span class="line"> 然后继续添加服务自启：</span><br><span class="line"> <span class="comment"># chkconfig --add mysqld</span></span><br><span class="line"> <span class="comment"># chkconfig --list mysqld</span></span><br></pre></td></tr></table></figure><p><strong>TIPS：</strong> mysql查找配置文件的位置，按照如下的顺序查找。</p><p>/etc/my.cnf –&gt;/etc/mysql/my.cnf –&gt;$BASEDIR/my.cnf（安装目录） –&gt;~/.my.cnf(家目录)<br>一一查询完后，以最后一个为准。<br>根据自己主机的资源，配置选择my.cnf。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp support-files/my-large.cnf /etc/my.cnf</span></span><br><span class="line">在/etc/my.cnf的[mysqld]中添加datadir = /data</span><br></pre></td></tr></table></figure><hr><h2 id="五-将mysql的安装目录的bin加入PATH："><a href="#五-将mysql的安装目录的bin加入PATH：" class="headerlink" title="五.将mysql的安装目录的bin加入PATH："></a>五.将mysql的安装目录的bin加入PATH：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">将</span><br><span class="line">PATH=<span class="variable">$PATH</span>：/usr/<span class="built_in">local</span>/mysql/bin</span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line">这两行加入到/etc/profile的末尾，注意不要在等号的左右加空格，不然会报错。</span><br><span class="line"><span class="comment"># source /etc/profile</span></span><br></pre></td></tr></table></figure><h2 id="六-输出mysql的man手册至man命令的查找路径："><a href="#六-输出mysql的man手册至man命令的查找路径：" class="headerlink" title="六.输出mysql的man手册至man命令的查找路径："></a>六.输出mysql的man手册至man命令的查找路径：</h2><p>如果你使用的是最小系统安装，则没有安装man手册，执行如下命令安装man手册：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y man-pages man-pages-overrides</span><br><span class="line">cp /etc/man.config.rpmnew /etc/man.config</span><br></pre></td></tr></table></figure><p>编辑/etc/man.config，添加如下行即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MANPATH  /usr/<span class="built_in">local</span>/mysql/man</span><br></pre></td></tr></table></figure><h2 id="七-输出mysql的头文件至系统头文件路径-usr-include："><a href="#七-输出mysql的头文件至系统头文件路径-usr-include：" class="headerlink" title="七.输出mysql的头文件至系统头文件路径/usr/include："></a>七.输出mysql的头文件至系统头文件路径/usr/include：</h2><p>这可以通过简单的创建链接实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ln -sv /usr/local/mysql/include  /usr/include/mysql</span></span><br></pre></td></tr></table></figure><h2 id="八-输出mysql的库文件给系统库查找路径："><a href="#八-输出mysql的库文件给系统库查找路径：" class="headerlink" title="八.输出mysql的库文件给系统库查找路径："></a>八.输出mysql的库文件给系统库查找路径：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo '/usr/local/mysql/lib' &gt; /etc/ld.so.conf.d/mysql.conf</span></span><br><span class="line">而后让系统重新载入系统库：</span><br><span class="line"><span class="comment"># ldconfig -v</span></span><br></pre></td></tr></table></figure><p><strong>到此结束。动手做一做吧！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
