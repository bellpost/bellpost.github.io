<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bellpost</title>
  <icon>https://bellpost@github.io/icon.png</icon>
  <subtitle>见招拆招</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bellpost@github.io/"/>
  <updated>2020-07-22T12:37:16.745Z</updated>
  <id>https://bellpost@github.io/</id>
  
  <author>
    <name>bellpost</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>布隆过滤器原理</title>
    <link href="https://bellpost@github.io/2020/07/22/bloom-filter/"/>
    <id>https://bellpost@github.io/2020/07/22/bloom-filter/</id>
    <published>2020-07-22T06:27:26.000Z</published>
    <updated>2020-07-22T12:37:16.745Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt;在项目中使用过布隆过滤，非常强大，效率出奇的高，而且不怎么占用内存。在此记录下布隆过滤器原理。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>利用java aop实现异常触发器</title>
    <link href="https://bellpost@github.io/2020/07/21/java-aop-exception-trigger/"/>
    <id>https://bellpost@github.io/2020/07/21/java-aop-exception-trigger/</id>
    <published>2020-07-21T14:40:21.000Z</published>
    <updated>2020-07-22T05:10:08.064Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt;上线一些小的项目，项目出现异常，一般不能实时反馈，如何才能在出现异常时实时捕获反馈呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://bellpost@github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux pam在OMV中的应用</title>
    <link href="https://bellpost@github.io/2020/07/21/linux-pam-to-openmediavault/"/>
    <id>https://bellpost@github.io/2020/07/21/linux-pam-to-openmediavault/</id>
    <published>2020-07-21T14:39:29.000Z</published>
    <updated>2020-07-22T07:28:08.705Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt;折腾过几次openmediavault，发现它使用的用户管理有点奇怪，用户信息没使用关系型数据库存储。so，就去钻研了下，它是如何实现的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://bellpost@github.io/categories/Linux/"/>
    
    
      <category term="openmediavault" scheme="https://bellpost@github.io/tags/openmediavault/"/>
    
  </entry>
  
  <entry>
    <title>man命令详解</title>
    <link href="https://bellpost@github.io/2020/07/20/linux-man-command/"/>
    <id>https://bellpost@github.io/2020/07/20/linux-man-command/</id>
    <published>2020-07-20T04:26:11.000Z</published>
    <updated>2020-07-20T05:23:12.306Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt;对于Linux的学习，man命令的了解至关重要。换一句话说就是读官方文档的能力。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://bellpost@github.io/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://bellpost@github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux修改登录提示语(MOTD)</title>
    <link href="https://bellpost@github.io/2020/07/20/linux-login-message/"/>
    <id>https://bellpost@github.io/2020/07/20/linux-login-message/</id>
    <published>2020-07-20T02:58:11.000Z</published>
    <updated>2020-07-20T04:23:28.552Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt; 意外发现linux登录的提示可以修改，可以显示当前的系统信息以及自定义欢迎语等功能，让我有了好奇心。下文主要介绍update-motd方式修改。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://bellpost@github.io/categories/Linux/"/>
    
    
      <category term="motd" scheme="https://bellpost@github.io/tags/motd/"/>
    
      <category term="linux" scheme="https://bellpost@github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Nmap资料整理</title>
    <link href="https://bellpost@github.io/2020/07/17/understanding-nmap/"/>
    <id>https://bellpost@github.io/2020/07/17/understanding-nmap/</id>
    <published>2020-07-17T07:43:02.000Z</published>
    <updated>2020-07-17T08:26:24.003Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt;工作中，经常用到Nmap去检查端口，探测主机服务。实际上，Nmap除了这些，其他的功能也非常强大，扩展性非常强。你大概不能想到Nmap还能连接数据库查询表数据，执行相关sql。&lt;/p&gt;
    
    </summary>
    
    
      <category term="network" scheme="https://bellpost@github.io/categories/network/"/>
    
    
      <category term="nmap" scheme="https://bellpost@github.io/tags/nmap/"/>
    
  </entry>
  
  <entry>
    <title>详细讲解U盘制作启动盘安装Linux</title>
    <link href="https://bellpost@github.io/2020/07/16/U-disk-install-linux/"/>
    <id>https://bellpost@github.io/2020/07/16/U-disk-install-linux/</id>
    <published>2020-07-16T08:53:33.000Z</published>
    <updated>2020-07-22T04:26:40.803Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt;制作启动盘的方法有很多，现介绍下面一款软件的使用过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://bellpost@github.io/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://bellpost@github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>来写写如何手动迁移hbase的数据</title>
    <link href="https://bellpost@github.io/2020/07/16/migrating-hbase-data/"/>
    <id>https://bellpost@github.io/2020/07/16/migrating-hbase-data/</id>
    <published>2020-07-16T08:32:34.000Z</published>
    <updated>2020-07-16T08:50:44.423Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt;hbase数据迁移有多种方式，有静态的动态的，网上一堆。下面我说说上周实际使用import和export方式的过程。 &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="hbase" scheme="https://bellpost@github.io/tags/hbase/"/>
    
  </entry>
  
  <entry>
    <title>使用brew安装指定版本node</title>
    <link href="https://bellpost@github.io/2020/07/16/brew-node-choose-version/"/>
    <id>https://bellpost@github.io/2020/07/16/brew-node-choose-version/</id>
    <published>2020-07-16T07:45:26.000Z</published>
    <updated>2020-07-16T08:01:02.366Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt; 手贱升级brew update， 导致node升级到14版本，hexo的node使用时总是报错，所以需要退回到node@10版本&lt;/p&gt;
    
    </summary>
    
    
      <category term="macOS" scheme="https://bellpost@github.io/categories/macOS/"/>
    
    
      <category term="macOS" scheme="https://bellpost@github.io/tags/macOS/"/>
    
      <category term="node" scheme="https://bellpost@github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>squid实现突破内网上网</title>
    <link href="https://bellpost@github.io/2020/07/16/use-squid-break-through-the-internet/"/>
    <id>https://bellpost@github.io/2020/07/16/use-squid-break-through-the-internet/</id>
    <published>2020-07-16T07:20:10.000Z</published>
    <updated>2020-07-16T08:36:19.594Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt;实现代理上网的前提：在局域网内有一台可以访问外网的机器，并可以在上面部署squid程序。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>牛奶品质探讨</title>
    <link href="https://bellpost@github.io/2020/07/16/milk-quality/"/>
    <id>https://bellpost@github.io/2020/07/16/milk-quality/</id>
    <published>2020-07-16T04:40:51.000Z</published>
    <updated>2020-07-16T06:13:09.010Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt;在推上看到有人讨论喝国内牛奶腹泻，喝国外牛奶从不腹泻，引起了我的好奇心，难道加工工艺有很大差别吗？还是奶质的差别？还是制度约束不够呢？这些问题我也无从回答，只是搜集相关资料整理。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生活" scheme="https://bellpost@github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="milk" scheme="https://bellpost@github.io/tags/milk/"/>
    
  </entry>
  
  <entry>
    <title>Homebrew镜像源替换及还原</title>
    <link href="https://bellpost@github.io/2020/07/16/homebrew-source-replace-and-restore/"/>
    <id>https://bellpost@github.io/2020/07/16/homebrew-source-replace-and-restore/</id>
    <published>2020-07-16T03:55:18.000Z</published>
    <updated>2020-07-16T05:38:01.142Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt; Homebrew以前使用阿里云镜像源一直体验不佳，比较多的包请求不到，需要编译，十分慢及耗资源，所以换成清华大学镜像源,在此记录下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="macOS" scheme="https://bellpost@github.io/categories/macOS/"/>
    
    
      <category term="macOS" scheme="https://bellpost@github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>MySQL5.5编译安装</title>
    <link href="https://bellpost@github.io/2020/07/15/mysql-build-install/"/>
    <id>https://bellpost@github.io/2020/07/15/mysql-build-install/</id>
    <published>2020-07-15T11:31:58.000Z</published>
    <updated>2020-07-16T05:35:25.667Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;导语：&lt;/strong&gt; 一篇老的blog，写的不好，勿怪。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://bellpost@github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="https://bellpost@github.io/tags/mysql/"/>
    
  </entry>
  
</feed>
